[{"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/index.js":"1","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/reportWebVitals.js":"2","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/SignUp.jsx":"3","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/Login.jsx":"4","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/LandingPage.jsx":"5","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/Footer.jsx":"6","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/HomePage.jsx":"7","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/LoadingSpin.jsx":"8","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/firebase.js":"9","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/NavBar.jsx":"10","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/CreateMeme.jsx":"11","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/Upload.jsx":"12","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/HomePageView.jsx":"13","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/SetUpAccount.jsx":"14","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/App.jsx":"15","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/AuthContext.jsx":"16","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/ProfileContext.jsx":"17","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/HomePageContext.jsx":"18","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemeContainer.jsx":"19","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/UploadMemeContext.jsx":"20","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemesFromFBD.jsx":"21","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/CreateMemeContext.jsx":"22"},{"size":1070,"mtime":1650124217287,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1649465786570,"results":"25","hashOfConfig":"24"},{"size":7540,"mtime":1649926814763,"results":"26","hashOfConfig":"24"},{"size":3978,"mtime":1650114275869,"results":"27","hashOfConfig":"24"},{"size":940,"mtime":1649920256690,"results":"28","hashOfConfig":"24"},{"size":317,"mtime":1650083263444,"results":"29","hashOfConfig":"24"},{"size":1688,"mtime":1650124308107,"results":"30","hashOfConfig":"24"},{"size":148,"mtime":1650078856692,"results":"31","hashOfConfig":"24"},{"size":630,"mtime":1649929846609,"results":"32","hashOfConfig":"24"},{"size":2536,"mtime":1650122604034,"results":"33","hashOfConfig":"24"},{"size":2691,"mtime":1650124642334,"results":"34","hashOfConfig":"24"},{"size":4138,"mtime":1650123311123,"results":"35","hashOfConfig":"24"},{"size":368,"mtime":1650087898061,"results":"36","hashOfConfig":"24"},{"size":4371,"mtime":1650122155158,"results":"37","hashOfConfig":"24"},{"size":933,"mtime":1650113037734,"results":"38","hashOfConfig":"24"},{"size":713,"mtime":1650112873947,"results":"39","hashOfConfig":"24"},{"size":657,"mtime":1650122506906,"results":"40","hashOfConfig":"24"},{"size":743,"mtime":1650089291117,"results":"41","hashOfConfig":"24"},{"size":1946,"mtime":1650122670138,"results":"42","hashOfConfig":"24"},{"size":424,"mtime":1650109383727,"results":"43","hashOfConfig":"24"},{"size":1942,"mtime":1650120795492,"results":"44","hashOfConfig":"24"},{"size":424,"mtime":1650124200926,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"jkc7tn",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"53"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"49"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"53"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"49"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/index.js",[],[],["124","125"],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/reportWebVitals.js",[],[],["126","127"],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/SignUp.jsx",["128","129","130","131","132","133","134","135","136","137","138","139"],[],"import React, { useEffect, useState } from \"react\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport { useHistory, NavLink } from \"react-router-dom\";\nimport \"./Signup.scss\";\n\nexport default function SignUp() {\n  const [emailIsValid, setEmailIsValid] = useState(false);\n  const [error, setError] = useState(true);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [passwordIsValid, setPasswordIsValid] = useState(false);\n  const [passwordIsValidError, setPasswordIsValidError] = useState(true);\n  const [requireTextField, setRequireTextField] = useState(false);\n  const [requiredError, setRequiredError] = useState(\"\");\n\n  const [signError, setSignError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPasword] = useState(\"\");\n  const [confirmError, setConfirmError] = useState(true);\n\n  function validateEmail(e) {\n    const email = e.target.value;\n    const regex =\n      /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    if (regex.test(email)) {\n      setEmailIsValid(true);\n      setError(false);\n    } else {\n      setEmailIsValid(false);\n      setError(true);\n    }\n  }\n\n  function tooglePassword() {\n    setShowPassword(!showPassword);\n  }\n  function toogleConfirmPass() {\n    setShowConfirmPass(!showConfirmPass);\n  }\n\n  function validatePassword(e) {\n    const passWord = e.target.value;\n    const passwordRegex =\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/;\n    if (passwordRegex.test(passWord)) {\n      setPasswordIsValid(true);\n      setPasswordIsValidError(false);\n    } else {\n      setPasswordIsValid(false);\n      setPasswordIsValidError(true);\n    }\n  }\n\n  function requiredField(e) {\n    if (e.target.value.length === 0) {\n      setRequireTextField(true);\n      setRequiredError(\"*required\");\n    } else {\n      setRequireTextField(false);\n      setRequiredError(\"\");\n    }\n  }\n\n  function handleEmailInput(e) {\n    setEmail(e.target.value);\n  }\n  function handlePasswordInput(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleConfirmPasswordInput(e) {\n    setConfirmPasword(e.target.value);\n  }\n\n  useEffect(() => {\n    if (password !== confirmPassword) {\n      // setPasswordMatch(false);\n      setConfirmError(true);\n    } else {\n      setConfirmError(false);\n    }\n  }, [confirmPassword]);\n\n  const history = useHistory();\n\n  function handleSignUpClick(e) {\n    e.preventDefault();\n\n    createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        console.log(user);\n        history.push(\"./login\");\n      })\n      .catch((error) => {\n        console.log(error);\n        if (error.code === \"auth/email-already-in-use\") {\n          setSignError(error.message);\n        } else {\n          setSignError(\"All fields must have valid data!\");\n        }\n      });\n  }\n\n  return (\n    <div>\n      <NavLink to=\"/homeview\" className=\"meme-book\">\n        Meme <br />\n        <span\n          style={{\n            color: \"black\",\n            fontSize: \"50px\",\n            textShadow: \"0 0 2px white\",\n          }}\n        >\n          Book\n        </span>\n      </NavLink>\n      <div className=\"sign-up-form\">\n        <form method=\"post\">\n          <div\n            style={{\n              textAlign: \"center\",\n              fontSize: \"35px\",\n              fontWeight: \"800\",\n              fontFamily: \"Copperplate, Copperplate Gothic Light,fantasy\",\n            }}\n          >\n            <label>Sign Up</label>\n          </div>\n          <div>\n            <br />\n            <label htmlFor=\"email\">Email: </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={(e) => {\n                handleEmailInput(e);\n                validateEmail(e);\n                requiredField(e);\n              }}\n              className={requireTextField ? \"required-text\" : \"\"}\n            />\n            <br />\n            <small style={{ color: \"red\" }}>\n              <i>{requiredError}</i>\n            </small>\n            <br />\n            <i>\n              {error ? (\n                <small style={{ color: \"red\" }}>\n                  Email format is not valid\n                </small>\n              ) : (\n                <small style={{ color: \"green\" }}>Email format is valid</small>\n              )}\n            </i>\n          </div>\n          <div>\n            <br />\n            <label htmlFor=\"password\">Password: </label>\n            <input\n              type={showPassword ? \"text\" : \"password\"}\n              name=\"password\"\n              onChange={(e) => {\n                handlePasswordInput(e);\n                validatePassword(e);\n              }}\n              className={passwordIsValid ? \"\" : \"required-text\"}\n            />\n            <br />\n            <small style={{ color: \"red\" }}>\n              <i>{requiredError}</i>\n            </small>\n            <br />\n            <input type=\"checkbox\" onClick={tooglePassword} />\n            <small>{showPassword ? \" Hide \" : \" Show \"} Password</small>\n            <br />\n            <small>\n              <i>\n                {passwordIsValidError ? (\n                  <small style={{ color: \"red\" }}>\n                    \"Password must be 6-30 characters long and must have at\n                    least one Number, Uppercase, Lowercase and a Special\n                    character!\"\n                  </small>\n                ) : (\n                  <small style={{ color: \"green\" }}>\n                    Your password is valid\n                  </small>\n                )}\n              </i>\n            </small>\n          </div>\n          <div>\n            <br />\n            <label htmlFor=\"confirm-password\">Confirm Password: </label>\n            <input\n              type={showConfirmPass ? \"text\" : \"password\"}\n              name=\"confirmPassword\"\n              onChange={(e) => {\n                requiredField(e);\n                handleConfirmPasswordInput(e);\n              }}\n              className={requireTextField ? \"required-text\" : \"\"}\n            />\n            <br />\n            <small style={{ color: \"red\" }}>\n              <i>{requiredError}</i>\n            </small>\n            <br />\n            <input type=\"checkbox\" onClick={toogleConfirmPass} />\n            <small>{showConfirmPass ? \" Hide \" : \" Show \"} Password</small>\n            <br />\n            <i>\n              {confirmError ? (\n                <small style={{ color: \"red\" }}>Password doesn't match</small>\n              ) : (\n                <small style={{ color: \"green\" }}>\n                  \"Password Matches, All Good!!\"\n                </small>\n              )}\n            </i>\n          </div>\n          <br /> <br />\n          <small>\n            <i>\n              By clicking the \"SignUp\" button below, you agree to all terms and\n              conditions\n            </i>\n          </small>\n          <br /> <br />\n          <small style={{ color: \"red\" }}>{signError}</small>\n          <br /> <br />\n          <div className=\"landing-signup\">\n            <button\n              to=\"/login\"\n              className=\"signup-button\"\n              onClick={handleSignUpClick}\n            >\n              Sign Up\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/Login.jsx",["140","141"],[],"import { useHistory, NavLink } from \"react-router-dom\";\nimport React, { useState, useContext } from \"react\";\nimport \"./Login.scss\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nexport default function Login() {\n  const [error, setError] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emptyEmailError, setEmptyEmailError] = useState(\"\");\n  const [emptyPasswordError, setEmptyPasswordError] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [currentUser, setCurrentUser, userAvailable, setUserAvailable] = useContext(AuthContext);\n\n  const history = useHistory();\n\n  function tooglePassword() {\n    setShowPassword(!showPassword);\n  }\n\n  const emailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const passwordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const validateEmailInput = () => {\n    if (email.length === 0) {\n      setEmptyEmailError(\"Email must not be empty!\");\n    } else {\n      setEmptyEmailError(\"\");\n    }\n  };\n\n  const validatePasswordInput = () => {\n    if (password.length === 0) {\n      setEmptyPasswordError(\"Password must not be empty!\");\n    } else {\n      setEmptyPasswordError(\"\");\n    }\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user;\n        console.log(user);\n        setCurrentUser(user.email)\n        setUserAvailable(true);\n        history.push(\"/homeview\");\n      })\n      .catch((error) => {\n        setError(true);\n      });\n  };\n  return (\n    <div>\n      <NavLink to=\"/homeview\" className=\"meme-book\">\n        Meme <br />\n        <span\n          style={{\n            color: \"black\",\n            fontSize: \"50px\",\n            textShadow: \"0 0 2px white\",\n          }}\n        >\n          Book\n        </span>\n      </NavLink>\n      <div className=\"login\">\n        <form>\n          <div\n            style={{\n              textAlign: \"center\",\n              fontSize: \"35px\",\n              fontWeight: \"800\",\n              fontFamily: \"Copperplate, Copperplate Gothic Light,fantasy\",\n            }}\n          >\n            <label>Log In</label>\n          </div>\n          <div>\n            <br />\n            <label htmlFor=\"first-name\">Email: </label>\n            <input\n              type=\"email\"\n              onChange={(e) => {\n                emailChange(e);\n                validateEmailInput();\n              }}\n            />\n          </div>\n          <br />\n          <small style={{ color: \"red\" }}>\n            <i>{emptyEmailError}</i>\n          </small>\n          <div>\n            <br />\n            <label htmlFor=\"first-name\">Password: </label>\n            <input\n              type={showPassword ? \"text\" : \"password\"}\n              onChange={(e) => {\n                passwordChange(e);\n                validatePasswordInput();\n              }}\n            />\n          </div>\n          <input type=\"checkbox\" onClick={tooglePassword} />\n          <small>{showPassword ? \" Hide \" : \" Show \"} Password</small>\n          <br />\n          <br />\n          <small style={{ color: \"red\" }}>\n            <i>{emptyPasswordError}</i>\n          </small>\n          <br /> <br />\n          <small>\n            <i>\n              By clicking the \"Log In\" button below, you will be directed to the\n              actual app\n            </i>\n          </small>\n          <br /> <br />\n          {error && (\n            <small style={{ color: \"red\" }}>Wrong Email or Password !!</small>\n          )}\n          <br /> <br />\n          <div className=\"landing-signup\">\n            <button className=\"login-button\" onClick={handleLogin}>\n              Log In\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/LandingPage.jsx",[],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/Footer.jsx",[],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/HomePage.jsx",["142","143"],[],"import React, { useContext, useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CreateMeme from \"./CreateMeme\";\nimport HomePageView from \"./HomePageView\";\nimport SetUpAccount from \"./SetUpAccount\";\nimport Upload from \"./Upload\";\nimport { HomePageContext } from \"../../context/HomePageContext\";\n\nexport default function HomePage() {\n  // const [profile, SetProfile] = useContext(ProfileContext);\n  const [homePageData, SetHomePageData] = useContext(HomePageContext);\n\n  const [preview, setPreview] = useState();\n  function ShowPreview(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      const src = e.target.files[0];\n      setPreview(src);\n    }\n  }\n  function RemovePreview() {\n    setPreview();\n  }\n\n  return (\n    <div>\n      <NavBar />\n      {/* <Route path=\"/homeview/feed\">\n        <FeedContainer />\n      </Route> */}\n      <Switch>\n        <Route path=\"/homeview/upload\">\n          <Upload\n            preview={preview}\n            setPreview={setPreview}\n            showPreview={ShowPreview}\n            removePreview={RemovePreview}\n          />\n        </Route>\n        <Route path=\"/homeview/create\">\n          <CreateMeme\n            preview={preview}\n            setPreview={setPreview}\n            showPreview={ShowPreview}\n            removePreview={RemovePreview}\n          />\n        </Route>\n        <Route path=\"/homeview/setprofile\">\n          <SetUpAccount\n            preview={preview}\n            setPreview={setPreview}\n            showPreview={ShowPreview}\n            removePreview={RemovePreview}\n          />\n        </Route>\n      </Switch>\n      <HomePageView />\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/LoadingSpin.jsx",[],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/firebase.js",[],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/NavBar.jsx",["144","145","146"],[],"import React, { useContext } from \"react\";\nimport { NavLink, useHistory, Link } from \"react-router-dom\";\nimport \"./NavBar.css\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HomePageContext } from \"../../context/HomePageContext\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\n\nexport default function NavBar() {\n  const [homePageData, setHomePageData, newMeme, setNewMeme] =\n    useContext(HomePageContext);\n\n  const [profile, setProfile, profileAvailable, setProfileAvailable] =\n    useContext(ProfileContext);\n  const history = useHistory();\n\n  const profilePic = localStorage.getItem(\"profile\", JSON.stringify(profile));\n  const parsedProfilePic = JSON.parse(profilePic);\n\n  const getNewMemes = () => {\n    fetch(`https://www.reddit.com/r/memes.json?after=${newMeme}`)\n      .then((res) => res.json())\n      .then((body) => {\n        setNewMeme(body.data.after);\n        setHomePageData(body.data.children);\n      });\n  };\n\n  return (\n    <div className=\"nav-bar\">\n      <button\n        className=\"meme-book\"\n        onClick={(e) => {\n          history.push(\"/homeview\");\n          getNewMemes();\n        }}\n      >\n        Meme <br />\n        <span\n          style={{\n            color: \"black\",\n            fontSize: \"50px\",\n            textShadow: \"0 0 2px white\",\n          }}\n        >\n          Book\n        </span>\n      </button>\n\n      <Link\n        to=\"/homeview/upload\"\n        className=\"meme-upload\"\n        title=\"Upload Meme\"\n      ></Link>\n      <Link\n        to=\"/homeview/create\"\n        className=\"meme-create\"\n        title=\"Create Meme\"\n      ></Link>\n\n      <Dropdown>\n        <Dropdown.Toggle id=\"custom\">\n          <NavLink\n            to=\"/homeview/profile\"\n            className=\"meme-profile\"\n            style={profileAvailable ? {backgroundImage: `url(${parsedProfilePic.profilePic})`}: {backgroundImage: `url(./images/user.png)`}}\n            title=\"Set Profile\"\n          ></NavLink>\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item\n            href=\"\"\n            onClick={(e) => {\n              history.push(\"/homeview/setprofile\");\n            }}\n          >\n            Set Profile\n          </Dropdown.Item>\n          <Dropdown.Item\n            href=\"\"\n            onClick={(e) => {\n              window.localStorage.clear();\n              history.push(\"/\");\n            }}\n          >\n            Logout\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/CreateMeme.jsx",["147","148","149"],[],"import { ProfileContext } from \"../../context/ProfileContext\";\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateMemeContext } from \"../../context/CreateMemeContext\";\n\nexport default function CreateMeme({\n  preview,\n  setPreview,\n  showPreview,\n  removePreview,\n}) {\n  const [createMeme, setCreateMeme] = useContext(CreateMemeContext);\n  const [imageLoad, setImageLoad] = useState(null);\n  const history = useHistory();\n\n  const handleInputChange = (e) => {\n    setCreateMeme({ ...createMeme, [e.target.name]: e.target.value });\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"upload-show\">\n        <form method=\"post\" className=\"form\">\n          <label className=\"label-top\">\n            Alright, Lets Create a Meme\n            <br />\n            <br />\n            🤭\n          </label>\n          <br /> <br />\n          <br /> <br /> <br />\n          <br />\n          {preview ? (\n            <div className=\"image\">\n              <img\n                src={URL.createObjectURL(preview)}\n                className=\"img\"\n                alt=\"profile-pic\"\n              />\n              <br />\n              <button className=\"remove-image\" onClick={removePreview}>\n                Remove\n              </button>\n            </div>\n          ) : null}\n          <br /> <br />\n          {/* <small>Upload Progress: {imageLoad}% done!!</small> */}\n          <br />\n          <label htmlFor=\"file-ip\" className=\"label\">\n            Choose Your Meme\n          </label>\n          <input\n            name=\"creatingMeme\"\n            type=\"file\"\n            id=\"file-ip\"\n            accept=\"image/*\"\n            onChange={(e) => {\n              showPreview(e);\n              handleInputChange(e);\n            }}\n            hidden\n          ></input>\n          <br /> <br /> <br />\n          <label forhtml=\"fullName\">Top Text: </label>\n          <br /> <br />\n          <input\n            type=\"text\"\n            style={{ height: \"auto\", width: \"auto\" }}\n            name=\"topText\"\n            onChange={handleInputChange}\n          ></input>\n          <br /> <br /> <br />\n          <label forhtml=\"fullName\">Bottom Text: </label>\n          <br /> <br />\n          <input\n            type=\"text\"\n            style={{ height: \"auto\", width: \"auto\" }}\n            name=\"bottomText\"\n            onChange={handleInputChange}\n          ></input>\n          <br /> <br />\n          <button\n            className=\"save-profile\"\n            // onClick={handleUpload}\n            disabled={imageLoad !== null && imageLoad < 100}\n          >\n            Save\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/Upload.jsx",["150"],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/HomePageView.jsx",["151","152","153","154"],[],"import { useState, useEffect, useContext } from \"react\";\nimport { HomePageContext } from \"../../context/HomePageContext\";\n\nimport MemeContainer from \"./MemeContainer\";\n\nexport default function HomePageView() {\n\n  const [homePageData, setHomePageData] = useContext(HomePageContext);\n\n  return (\n    <div className=\"container\">\n      <MemeContainer />\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/SetUpAccount.jsx",["155","156"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\nimport \"./SetUpAccount.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db, auth, storage } from \"../../firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n\nexport default function SetUpAccount({\n  preview,\n  setPreview,\n  showPreview,\n  removePreview,\n}) {\n  const [profile, setProfile, profileAvailable, setProfileAvailable] = useContext(ProfileContext);\n  const [setupShow, setSetupShow] = useState(true);\n  const [imageLoad, setImageLoad] = useState(null);\n  const history = useHistory();\n\n  const handleInputChange = (e) => {\n    setProfile({ ...profile, [e.target.name]: e.target.value });\n  };\n\n  const handleSave = async (e) => {\n    e.preventDefault();\n    try {\n      const user = auth.currentUser;\n      await setDoc(doc(db, \"users\", user.uid), {\n        ...profile,\n        timeStamp: serverTimestamp(),\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    history.push(\"/homeview\");\n    setSetupShow(false);\n    setPreview();\n  };\n\n  useEffect(() => {\n    const uploadFile = () => {\n      const name = new Date().getTime() + preview.name;\n      console.log(name);\n      const storageRef = ref(storage, preview.name);\n      const uploadTask = uploadBytesResumable(storageRef, preview);\n\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log(\"Upload is \" + progress + \"% done\");\n          setImageLoad(progress);\n          switch (snapshot.state) {\n            case \"paused\":\n              console.log(\"Upload is paused\");\n              break;\n            case \"running\":\n              console.log(\"Upload is running\");\n              break;\n            default:\n              break;\n          }\n        },\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n            console.log(\"File available at\", downloadURL);\n            setProfile({ ...profile, profilePic: downloadURL });\n            setProfileAvailable(true);\n\n          });\n        }\n      );\n    };\n    preview && uploadFile();\n  }, [preview]);\n\n  console.log(profile);\n\n  return (\n    <div className={setupShow ? \"setup-show\" : \"setup-hide\"}>\n      <div className=\"container\">\n        <form method=\"post\" className=\"form\">\n          <label className=\"label-top\">\n            Alright, Lets Create A Profile...hehe <br />\n            <br />\n            🤭\n          </label>\n          <br /> <br />\n          <label forhtml=\"fullName\">Full Name: </label>\n          <input\n            type=\"text\"\n            name=\"fullName\"\n            onChange={handleInputChange}\n          ></input>\n          <br /> <br />\n          <label forhtml=\"fullName\">username: </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            onChange={handleInputChange}\n          ></input>\n          <br /> <br /> <br /> <br /> <br /> <br />\n          {preview ? (\n            <div className=\"image\">\n              <img\n                src={URL.createObjectURL(preview)}\n                className=\"img\"\n                alt=\"profile-pic\"\n              />\n              <br />\n              <button className=\"remove-image\" onClick={removePreview}>\n                Remove\n              </button>\n            </div>\n          ) : null}\n          <br />\n          <br />\n          <small>Upload Progress: {imageLoad} done!!</small>\n          <br />\n          <label htmlFor=\"file-ip\" className=\"label\">\n            Choose Profile Picture{\" \"}\n          </label>\n          <input\n            name=\"image\"\n            type=\"file\"\n            id=\"file-ip\"\n            accept=\"image/*\"\n            onChange={(e) => {\n              showPreview(e);\n              handleInputChange(e);\n            }}\n            hidden\n          ></input>\n          <br /> <br />\n          <button\n            className=\"save-profile\"\n            onClick={handleSave}\n            disabled={imageLoad !== null && imageLoad < 100}\n          >\n            Save\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/App.jsx",["157"],[],"import \"../App.css\";\nimport { Route , Switch, Redirect } from \"react-router-dom\";\nimport LandingPage from \"./AuthForm/LandingPage\";\nimport SignUp from \"./AuthForm/SignUp\";\nimport Login from \"./AuthForm/Login\";\nimport Footer from \"./AuthForm/Footer\";\nimport HomePage from \"./AppContents/HomePage\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\n\n\n\nfunction App() {\n  const [userAvailable, SetUserAvailable] = useContext(AuthContext);\n\n  return (\n    <div>\n        <Switch>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n            </ Route>\n          <Route path=\"/homeview\">\n              {userAvailable ? <HomePage/> :<Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/\">\n            <LandingPage />\n          </Route>\n        </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/AuthContext.jsx",[],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/ProfileContext.jsx",[],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/HomePageContext.jsx",[],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemeContainer.jsx",["158","159","160","161","162","163"],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/UploadMemeContext.jsx",["164"],[],"import { createContext, useEffect, useState } from \"react\";\n\nconst UploadMemeContext = createContext();\n\nfunction UploadMemeContextProvider({children}){\n    const [uploadMeme, setUploadMeme] = useState({});\n\n    return (\n        <UploadMemeContext.Provider value={[uploadMeme, setUploadMeme]}>\n            {children}    \n        </UploadMemeContext.Provider>\n    );\n};\n\nexport {UploadMemeContext, UploadMemeContextProvider};","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemesFromFBD.jsx",["165","166"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { db, auth } from \"../../firebase\";\nimport { doc, collection, getDocs, deleteDoc } from \"firebase/firestore\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\n\nexport default function MemesFromFBD() {\n  const [allUploadedMemes, SetAllUploadedMemes] = useState([]);\n  const [profile, setProfile] = useContext(ProfileContext);\n\n  const user = auth.currentUser;\n  const memeCollectionRef = collection(db, \"users\", user.uid, \"memes\");\n\n  useEffect(() => {\n    getAllUploadedMemes();\n  }, [allUploadedMemes]);\n\n  const getAllUploadedMemes = async () => {\n    const uploadedMemes = await getDocs(memeCollectionRef);\n    SetAllUploadedMemes(\n      uploadedMemes.docs.map((doc) => ({ ...doc.data(), id: doc.id }))\n    );\n  };\n\n  const deleteMeme = (id) => {\n    const memeDoc = doc(db, \"users\", user.uid, \"memes\", id );\n    return deleteDoc(memeDoc);\n  };\n\n  const handleDelete = async(id) => {\n      await deleteMeme(id);\n      getAllUploadedMemes();\n\n  }\n\n  const userName = localStorage.getItem(\"profile\", JSON.stringify(profile));\n  const parsedUserName = JSON.parse(userName);\n\n  const uploadedMemeToDisplay = allUploadedMemes.map((meme, index) => {\n    const meme_url = meme.uploadedMemeImage;\n    return (\n      <div className=\"meme-container\" key={index + 1}>\n        <h4 style={{ float: \"left\" }}>{parsedUserName.username}</h4>\n        <br />\n        <small\n          style={{\n            fontStyle: \"italic\",\n            fontWeight: \"300\",\n            fontSize: \"15px\",\n            float: \"left\",\n          }}\n        >\n          {meme.caption}\n        </small>\n        <br /> <br />\n        <img src={meme_url} alt={meme.caption} className=\"meme-image\" />\n        <br /> <br />\n        <button style={{backgroundColor: \"red\"}} onClick={(e) => handleDelete(meme.id)}>🗑</button>\n      </div>\n    );\n  });\n\n  return <div>{uploadedMemeToDisplay}</div>;\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/CreateMemeContext.jsx",["167"],[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"168","replacedBy":"172"},{"ruleId":"170","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":8,"column":10,"nodeType":"176","messageId":"177","endLine":8,"endColumn":22},{"ruleId":"178","severity":1,"message":"179","line":26,"column":20,"nodeType":"180","messageId":"181","endLine":26,"endColumn":21,"suggestions":"182"},{"ruleId":"178","severity":1,"message":"183","line":26,"column":28,"nodeType":"180","messageId":"181","endLine":26,"endColumn":29,"suggestions":"184"},{"ruleId":"178","severity":1,"message":"179","line":26,"column":44,"nodeType":"180","messageId":"181","endLine":26,"endColumn":45,"suggestions":"185"},{"ruleId":"178","severity":1,"message":"183","line":26,"column":52,"nodeType":"180","messageId":"181","endLine":26,"endColumn":53,"suggestions":"186"},{"ruleId":"178","severity":1,"message":"183","line":26,"column":61,"nodeType":"180","messageId":"181","endLine":26,"endColumn":62,"suggestions":"187"},{"ruleId":"178","severity":1,"message":"183","line":26,"column":65,"nodeType":"180","messageId":"181","endLine":26,"endColumn":66,"suggestions":"188"},{"ruleId":"178","severity":1,"message":"179","line":26,"column":81,"nodeType":"180","messageId":"181","endLine":26,"endColumn":82,"suggestions":"189"},{"ruleId":"178","severity":1,"message":"183","line":26,"column":89,"nodeType":"180","messageId":"181","endLine":26,"endColumn":90,"suggestions":"190"},{"ruleId":"178","severity":1,"message":"179","line":26,"column":106,"nodeType":"180","messageId":"181","endLine":26,"endColumn":107,"suggestions":"191"},{"ruleId":"178","severity":1,"message":"183","line":26,"column":114,"nodeType":"180","messageId":"181","endLine":26,"endColumn":115,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":84,"column":6,"nodeType":"195","endLine":84,"endColumn":23,"suggestions":"196"},{"ruleId":"174","severity":1,"message":"197","line":15,"column":10,"nodeType":"176","messageId":"177","endLine":15,"endColumn":21},{"ruleId":"174","severity":1,"message":"198","line":15,"column":39,"nodeType":"176","messageId":"177","endLine":15,"endColumn":52},{"ruleId":"174","severity":1,"message":"199","line":12,"column":10,"nodeType":"176","messageId":"177","endLine":12,"endColumn":22},{"ruleId":"174","severity":1,"message":"200","line":12,"column":24,"nodeType":"176","messageId":"177","endLine":12,"endColumn":39},{"ruleId":"174","severity":1,"message":"199","line":10,"column":10,"nodeType":"176","messageId":"177","endLine":10,"endColumn":22},{"ruleId":"174","severity":1,"message":"201","line":13,"column":19,"nodeType":"176","messageId":"177","endLine":13,"endColumn":29},{"ruleId":"174","severity":1,"message":"202","line":13,"column":49,"nodeType":"176","messageId":"177","endLine":13,"endColumn":68},{"ruleId":"174","severity":1,"message":"203","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":24},{"ruleId":"174","severity":1,"message":"204","line":13,"column":21,"nodeType":"176","messageId":"177","endLine":13,"endColumn":33},{"ruleId":"174","severity":1,"message":"205","line":14,"column":9,"nodeType":"176","messageId":"177","endLine":14,"endColumn":16},{"ruleId":"193","severity":1,"message":"206","line":56,"column":6,"nodeType":"195","endLine":56,"endColumn":15,"suggestions":"207"},{"ruleId":"174","severity":1,"message":"208","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":18},{"ruleId":"174","severity":1,"message":"209","line":1,"column":20,"nodeType":"176","messageId":"177","endLine":1,"endColumn":29},{"ruleId":"174","severity":1,"message":"199","line":8,"column":10,"nodeType":"176","messageId":"177","endLine":8,"endColumn":22},{"ruleId":"174","severity":1,"message":"210","line":8,"column":24,"nodeType":"176","messageId":"177","endLine":8,"endColumn":39},{"ruleId":"174","severity":1,"message":"211","line":15,"column":31,"nodeType":"176","messageId":"177","endLine":15,"endColumn":47},{"ruleId":"193","severity":1,"message":"212","line":79,"column":6,"nodeType":"195","endLine":79,"endColumn":15,"suggestions":"213"},{"ruleId":"174","severity":1,"message":"214","line":14,"column":25,"nodeType":"176","messageId":"177","endLine":14,"endColumn":41},{"ruleId":"174","severity":1,"message":"209","line":1,"column":29,"nodeType":"176","messageId":"177","endLine":1,"endColumn":38},{"ruleId":"174","severity":1,"message":"208","line":1,"column":40,"nodeType":"176","messageId":"177","endLine":1,"endColumn":48},{"ruleId":"174","severity":1,"message":"210","line":9,"column":24,"nodeType":"176","messageId":"177","endLine":9,"endColumn":39},{"ruleId":"174","severity":1,"message":"215","line":10,"column":10,"nodeType":"176","messageId":"177","endLine":10,"endColumn":20},{"ruleId":"174","severity":1,"message":"216","line":10,"column":22,"nodeType":"176","messageId":"177","endLine":10,"endColumn":35},{"ruleId":"217","severity":1,"message":"218","line":11,"column":66,"nodeType":"219","messageId":"220","endLine":11,"endColumn":68},{"ruleId":"174","severity":1,"message":"209","line":1,"column":25,"nodeType":"176","messageId":"177","endLine":1,"endColumn":34},{"ruleId":"174","severity":1,"message":"201","line":8,"column":19,"nodeType":"176","messageId":"177","endLine":8,"endColumn":29},{"ruleId":"193","severity":1,"message":"221","line":15,"column":6,"nodeType":"195","endLine":15,"endColumn":24,"suggestions":"222"},{"ruleId":"174","severity":1,"message":"209","line":1,"column":25,"nodeType":"176","messageId":"177","endLine":1,"endColumn":34},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],["223"],["224"],"no-unused-vars","'emailIsValid' is assigned a value but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["225","226"],"Unnecessary escape character: \\\".",["227","228"],["229","230"],["231","232"],["233","234"],["235","236"],["237","238"],["239","240"],["241","242"],["243","244"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'password'. Either include it or remove the dependency array.","ArrayExpression",["245"],"'currentUser' is assigned a value but never used.","'userAvailable' is assigned a value but never used.","'homePageData' is assigned a value but never used.","'SetHomePageData' is assigned a value but never used.","'setProfile' is assigned a value but never used.","'setProfileAvailable' is assigned a value but never used.","'ProfileContext' is defined but never used.","'setImageLoad' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setUploadMeme' and 'uploadMeme'. Either include them or remove the dependency array.",["246"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'setHomePageData' is assigned a value but never used.","'profileAvailable' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'profile', 'setProfile', and 'setProfileAvailable'. Either include them or remove the dependency array.",["247"],"'SetUserAvailable' is assigned a value but never used.","'uploadMeme' is assigned a value but never used.","'setUploadMeme' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'getAllUploadedMemes'. Either include it or remove the dependency array.",["248"],"no-global-assign","no-unsafe-negation",{"messageId":"249","fix":"250","desc":"251"},{"messageId":"252","fix":"253","desc":"254"},{"messageId":"249","fix":"255","desc":"251"},{"messageId":"252","fix":"256","desc":"254"},{"messageId":"249","fix":"257","desc":"251"},{"messageId":"252","fix":"258","desc":"254"},{"messageId":"249","fix":"259","desc":"251"},{"messageId":"252","fix":"260","desc":"254"},{"messageId":"249","fix":"261","desc":"251"},{"messageId":"252","fix":"262","desc":"254"},{"messageId":"249","fix":"263","desc":"251"},{"messageId":"252","fix":"264","desc":"254"},{"messageId":"249","fix":"265","desc":"251"},{"messageId":"252","fix":"266","desc":"254"},{"messageId":"249","fix":"267","desc":"251"},{"messageId":"252","fix":"268","desc":"254"},{"messageId":"249","fix":"269","desc":"251"},{"messageId":"252","fix":"270","desc":"254"},{"messageId":"249","fix":"271","desc":"251"},{"messageId":"252","fix":"272","desc":"254"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},"removeEscape",{"range":"281","text":"282"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"283","text":"284"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"285","text":"282"},{"range":"286","text":"284"},{"range":"287","text":"282"},{"range":"288","text":"284"},{"range":"289","text":"282"},{"range":"290","text":"284"},{"range":"291","text":"282"},{"range":"292","text":"284"},{"range":"293","text":"282"},{"range":"294","text":"284"},{"range":"295","text":"282"},{"range":"296","text":"284"},{"range":"297","text":"282"},{"range":"298","text":"284"},{"range":"299","text":"282"},{"range":"300","text":"284"},{"range":"301","text":"282"},{"range":"302","text":"284"},"Update the dependencies array to be: [confirmPassword, password]",{"range":"303","text":"304"},"Update the dependencies array to be: [preview, setUploadMeme, uploadMeme]",{"range":"305","text":"306"},"Update the dependencies array to be: [preview, profile, setProfile, setProfileAvailable]",{"range":"307","text":"308"},"Update the dependencies array to be: [allUploadedMemes, getAllUploadedMemes]",{"range":"309","text":"310"},[1124,1125],"",[1124,1124],"\\",[1132,1133],[1132,1132],[1148,1149],[1148,1148],[1156,1157],[1156,1156],[1165,1166],[1165,1165],[1169,1170],[1169,1169],[1185,1186],[1185,1185],[1193,1194],[1193,1193],[1210,1211],[1210,1210],[1218,1219],[1218,1218],[2550,2567],"[confirmPassword, password]",[1796,1805],"[preview, setUploadMeme, uploadMeme]",[2401,2410],"[preview, profile, setProfile, setProfileAvailable]",[569,587],"[allUploadedMemes, getAllUploadedMemes]"]