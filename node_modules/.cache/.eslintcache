[{"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/index.js":"1","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/reportWebVitals.js":"2","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/SignUp.jsx":"3","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/Login.jsx":"4","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/LandingPage.jsx":"5","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/Footer.jsx":"6","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/HomePage.jsx":"7","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/LoadingSpin.jsx":"8","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/firebase.js":"9","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/NavBar.jsx":"10","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/CreateMeme.jsx":"11","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/Upload.jsx":"12","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/HomePageView.jsx":"13","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/SetUpAccount.jsx":"14","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/App.jsx":"15","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/AuthContext.jsx":"16","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/ProfileContext.jsx":"17","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/HomePageContext.jsx":"18","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemeContainer.jsx":"19","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/UploadMemeContext.jsx":"20","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemesFromFBD.jsx":"21","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/CreateMemeContext.jsx":"22","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/UploadCreatedMemeContext.jsx":"23"},{"size":1258,"mtime":1650294776319,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1649465786570,"results":"26","hashOfConfig":"25"},{"size":7540,"mtime":1649926814763,"results":"27","hashOfConfig":"25"},{"size":3978,"mtime":1650114275869,"results":"28","hashOfConfig":"25"},{"size":982,"mtime":1650125273941,"results":"29","hashOfConfig":"25"},{"size":390,"mtime":1650125957597,"results":"30","hashOfConfig":"25"},{"size":1397,"mtime":1650349360297,"results":"31","hashOfConfig":"25"},{"size":148,"mtime":1650078856692,"results":"32","hashOfConfig":"25"},{"size":630,"mtime":1649929846609,"results":"33","hashOfConfig":"25"},{"size":3094,"mtime":1650350040868,"results":"34","hashOfConfig":"25"},{"size":5980,"mtime":1650350854604,"results":"35","hashOfConfig":"25"},{"size":4402,"mtime":1650342690103,"results":"36","hashOfConfig":"25"},{"size":295,"mtime":1650349347491,"results":"37","hashOfConfig":"25"},{"size":4243,"mtime":1650342537524,"results":"38","hashOfConfig":"25"},{"size":933,"mtime":1650113037734,"results":"39","hashOfConfig":"25"},{"size":713,"mtime":1650112873947,"results":"40","hashOfConfig":"25"},{"size":656,"mtime":1650349916979,"results":"41","hashOfConfig":"25"},{"size":743,"mtime":1650089291117,"results":"42","hashOfConfig":"25"},{"size":1511,"mtime":1650349400575,"results":"43","hashOfConfig":"25"},{"size":424,"mtime":1650109383727,"results":"44","hashOfConfig":"25"},{"size":1926,"mtime":1650339351624,"results":"45","hashOfConfig":"25"},{"size":422,"mtime":1650339475334,"results":"46","hashOfConfig":"25"},{"size":483,"mtime":1650294651252,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"jkc7tn",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"51"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"55"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"51"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"51"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/index.js",[],[],["133","134"],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/reportWebVitals.js",[],[],["135","136"],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/SignUp.jsx",["137","138","139","140","141","142","143","144","145","146","147","148"],[],"import React, { useEffect, useState } from \"react\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport { useHistory, NavLink } from \"react-router-dom\";\nimport \"./Signup.scss\";\n\nexport default function SignUp() {\n  const [emailIsValid, setEmailIsValid] = useState(false);\n  const [error, setError] = useState(true);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [passwordIsValid, setPasswordIsValid] = useState(false);\n  const [passwordIsValidError, setPasswordIsValidError] = useState(true);\n  const [requireTextField, setRequireTextField] = useState(false);\n  const [requiredError, setRequiredError] = useState(\"\");\n\n  const [signError, setSignError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPasword] = useState(\"\");\n  const [confirmError, setConfirmError] = useState(true);\n\n  function validateEmail(e) {\n    const email = e.target.value;\n    const regex =\n      /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    if (regex.test(email)) {\n      setEmailIsValid(true);\n      setError(false);\n    } else {\n      setEmailIsValid(false);\n      setError(true);\n    }\n  }\n\n  function tooglePassword() {\n    setShowPassword(!showPassword);\n  }\n  function toogleConfirmPass() {\n    setShowConfirmPass(!showConfirmPass);\n  }\n\n  function validatePassword(e) {\n    const passWord = e.target.value;\n    const passwordRegex =\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/;\n    if (passwordRegex.test(passWord)) {\n      setPasswordIsValid(true);\n      setPasswordIsValidError(false);\n    } else {\n      setPasswordIsValid(false);\n      setPasswordIsValidError(true);\n    }\n  }\n\n  function requiredField(e) {\n    if (e.target.value.length === 0) {\n      setRequireTextField(true);\n      setRequiredError(\"*required\");\n    } else {\n      setRequireTextField(false);\n      setRequiredError(\"\");\n    }\n  }\n\n  function handleEmailInput(e) {\n    setEmail(e.target.value);\n  }\n  function handlePasswordInput(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleConfirmPasswordInput(e) {\n    setConfirmPasword(e.target.value);\n  }\n\n  useEffect(() => {\n    if (password !== confirmPassword) {\n      // setPasswordMatch(false);\n      setConfirmError(true);\n    } else {\n      setConfirmError(false);\n    }\n  }, [confirmPassword]);\n\n  const history = useHistory();\n\n  function handleSignUpClick(e) {\n    e.preventDefault();\n\n    createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        console.log(user);\n        history.push(\"./login\");\n      })\n      .catch((error) => {\n        console.log(error);\n        if (error.code === \"auth/email-already-in-use\") {\n          setSignError(error.message);\n        } else {\n          setSignError(\"All fields must have valid data!\");\n        }\n      });\n  }\n\n  return (\n    <div>\n      <NavLink to=\"/homeview\" className=\"meme-book\">\n        Meme <br />\n        <span\n          style={{\n            color: \"black\",\n            fontSize: \"50px\",\n            textShadow: \"0 0 2px white\",\n          }}\n        >\n          Book\n        </span>\n      </NavLink>\n      <div className=\"sign-up-form\">\n        <form method=\"post\">\n          <div\n            style={{\n              textAlign: \"center\",\n              fontSize: \"35px\",\n              fontWeight: \"800\",\n              fontFamily: \"Copperplate, Copperplate Gothic Light,fantasy\",\n            }}\n          >\n            <label>Sign Up</label>\n          </div>\n          <div>\n            <br />\n            <label htmlFor=\"email\">Email: </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={(e) => {\n                handleEmailInput(e);\n                validateEmail(e);\n                requiredField(e);\n              }}\n              className={requireTextField ? \"required-text\" : \"\"}\n            />\n            <br />\n            <small style={{ color: \"red\" }}>\n              <i>{requiredError}</i>\n            </small>\n            <br />\n            <i>\n              {error ? (\n                <small style={{ color: \"red\" }}>\n                  Email format is not valid\n                </small>\n              ) : (\n                <small style={{ color: \"green\" }}>Email format is valid</small>\n              )}\n            </i>\n          </div>\n          <div>\n            <br />\n            <label htmlFor=\"password\">Password: </label>\n            <input\n              type={showPassword ? \"text\" : \"password\"}\n              name=\"password\"\n              onChange={(e) => {\n                handlePasswordInput(e);\n                validatePassword(e);\n              }}\n              className={passwordIsValid ? \"\" : \"required-text\"}\n            />\n            <br />\n            <small style={{ color: \"red\" }}>\n              <i>{requiredError}</i>\n            </small>\n            <br />\n            <input type=\"checkbox\" onClick={tooglePassword} />\n            <small>{showPassword ? \" Hide \" : \" Show \"} Password</small>\n            <br />\n            <small>\n              <i>\n                {passwordIsValidError ? (\n                  <small style={{ color: \"red\" }}>\n                    \"Password must be 6-30 characters long and must have at\n                    least one Number, Uppercase, Lowercase and a Special\n                    character!\"\n                  </small>\n                ) : (\n                  <small style={{ color: \"green\" }}>\n                    Your password is valid\n                  </small>\n                )}\n              </i>\n            </small>\n          </div>\n          <div>\n            <br />\n            <label htmlFor=\"confirm-password\">Confirm Password: </label>\n            <input\n              type={showConfirmPass ? \"text\" : \"password\"}\n              name=\"confirmPassword\"\n              onChange={(e) => {\n                requiredField(e);\n                handleConfirmPasswordInput(e);\n              }}\n              className={requireTextField ? \"required-text\" : \"\"}\n            />\n            <br />\n            <small style={{ color: \"red\" }}>\n              <i>{requiredError}</i>\n            </small>\n            <br />\n            <input type=\"checkbox\" onClick={toogleConfirmPass} />\n            <small>{showConfirmPass ? \" Hide \" : \" Show \"} Password</small>\n            <br />\n            <i>\n              {confirmError ? (\n                <small style={{ color: \"red\" }}>Password doesn't match</small>\n              ) : (\n                <small style={{ color: \"green\" }}>\n                  \"Password Matches, All Good!!\"\n                </small>\n              )}\n            </i>\n          </div>\n          <br /> <br />\n          <small>\n            <i>\n              By clicking the \"SignUp\" button below, you agree to all terms and\n              conditions\n            </i>\n          </small>\n          <br /> <br />\n          <small style={{ color: \"red\" }}>{signError}</small>\n          <br /> <br />\n          <div className=\"landing-signup\">\n            <button\n              to=\"/login\"\n              className=\"signup-button\"\n              onClick={handleSignUpClick}\n            >\n              Sign Up\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/Login.jsx",["149","150"],[],"import { useHistory, NavLink } from \"react-router-dom\";\nimport React, { useState, useContext } from \"react\";\nimport \"./Login.scss\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nexport default function Login() {\n  const [error, setError] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emptyEmailError, setEmptyEmailError] = useState(\"\");\n  const [emptyPasswordError, setEmptyPasswordError] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [currentUser, setCurrentUser, userAvailable, setUserAvailable] = useContext(AuthContext);\n\n  const history = useHistory();\n\n  function tooglePassword() {\n    setShowPassword(!showPassword);\n  }\n\n  const emailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const passwordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const validateEmailInput = () => {\n    if (email.length === 0) {\n      setEmptyEmailError(\"Email must not be empty!\");\n    } else {\n      setEmptyEmailError(\"\");\n    }\n  };\n\n  const validatePasswordInput = () => {\n    if (password.length === 0) {\n      setEmptyPasswordError(\"Password must not be empty!\");\n    } else {\n      setEmptyPasswordError(\"\");\n    }\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user;\n        console.log(user);\n        setCurrentUser(user.email)\n        setUserAvailable(true);\n        history.push(\"/homeview\");\n      })\n      .catch((error) => {\n        setError(true);\n      });\n  };\n  return (\n    <div>\n      <NavLink to=\"/homeview\" className=\"meme-book\">\n        Meme <br />\n        <span\n          style={{\n            color: \"black\",\n            fontSize: \"50px\",\n            textShadow: \"0 0 2px white\",\n          }}\n        >\n          Book\n        </span>\n      </NavLink>\n      <div className=\"login\">\n        <form>\n          <div\n            style={{\n              textAlign: \"center\",\n              fontSize: \"35px\",\n              fontWeight: \"800\",\n              fontFamily: \"Copperplate, Copperplate Gothic Light,fantasy\",\n            }}\n          >\n            <label>Log In</label>\n          </div>\n          <div>\n            <br />\n            <label htmlFor=\"first-name\">Email: </label>\n            <input\n              type=\"email\"\n              onChange={(e) => {\n                emailChange(e);\n                validateEmailInput();\n              }}\n            />\n          </div>\n          <br />\n          <small style={{ color: \"red\" }}>\n            <i>{emptyEmailError}</i>\n          </small>\n          <div>\n            <br />\n            <label htmlFor=\"first-name\">Password: </label>\n            <input\n              type={showPassword ? \"text\" : \"password\"}\n              onChange={(e) => {\n                passwordChange(e);\n                validatePasswordInput();\n              }}\n            />\n          </div>\n          <input type=\"checkbox\" onClick={tooglePassword} />\n          <small>{showPassword ? \" Hide \" : \" Show \"} Password</small>\n          <br />\n          <br />\n          <small style={{ color: \"red\" }}>\n            <i>{emptyPasswordError}</i>\n          </small>\n          <br /> <br />\n          <small>\n            <i>\n              By clicking the \"Log In\" button below, you will be directed to the\n              actual app\n            </i>\n          </small>\n          <br /> <br />\n          {error && (\n            <small style={{ color: \"red\" }}>Wrong Email or Password !!</small>\n          )}\n          <br /> <br />\n          <div className=\"landing-signup\">\n            <button className=\"login-button\" onClick={handleLogin}>\n              Log In\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n",["151","152"],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/LandingPage.jsx",[],[],["153","154"],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/Footer.jsx",[],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/HomePage.jsx",["155","156"],[],"import React, { useContext, useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CreateMeme from \"./CreateMeme\";\nimport HomePageView from \"./HomePageView\";\nimport SetUpAccount from \"./SetUpAccount\";\nimport Upload from \"./Upload\";\nimport { HomePageContext } from \"../../context/HomePageContext\";\n\nexport default function HomePage() {\n  const [preview, setPreview] = useState();\n  function ShowPreview(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      const src = e.target.files[0];\n      setPreview(src);\n    }\n  }\n  function RemovePreview() {\n    setPreview();\n  }\n\n  return (\n    <div>\n      <NavBar />\n      {/* <Route path=\"/homeview/feed\">\n        <FeedContainer />\n      </Route> */}\n      <Switch>\n        <Route path=\"/homeview/upload\">\n          <Upload\n            preview={preview}\n            setPreview={setPreview}\n            showPreview={ShowPreview}\n            removePreview={RemovePreview}\n          />\n        </Route>\n        <Route path=\"/homeview/create\">\n          <CreateMeme />\n        </Route>\n        <Route path=\"/homeview/setprofile\">\n          <SetUpAccount\n            preview={preview}\n            setPreview={setPreview}\n            showPreview={ShowPreview}\n            removePreview={RemovePreview}\n          />\n        </Route>\n      </Switch>\n      <HomePageView />\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/LoadingSpin.jsx",[],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/firebase.js",[],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/NavBar.jsx",["157","158","159","160","161"],[],"import React, { useContext, useState } from \"react\";\nimport { NavLink, useHistory, Link } from \"react-router-dom\";\nimport \"./NavBar.css\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HomePageContext } from \"../../context/HomePageContext\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\nimport avatar from \"./images/user.png\";\nexport default function NavBar() {\n  const [homePageData, setHomePageData, newMeme, setNewMeme] =\n    useContext(HomePageContext);\n\n  const [profile, setProfile, profileAvailable, setProfileAvailable] =\n    useContext(ProfileContext);\n\n  const [profilePicture, setProfilePicture] = useState();\n  const history = useHistory();\n\n  const profilePic = localStorage?.getItem(\"profile\", JSON.stringify(profile));\n  const parsedProfilePic = JSON.parse(profilePic);\n\n  // console.log(parsedProfilePic.profilePic)\n\n  const getNewMemes = () => {\n    fetch(`https://www.reddit.com/r/memes.json?after=${newMeme}`)\n      .then((res) => res.json())\n      .then((body) => {\n        setNewMeme(body.data.after);\n        setHomePageData(body.data.children);\n      });\n  };\n  console.log(avatar);\n  // console.log(profile.profilePic)\n  // console.log(profileAvailable)\n  return (\n    <div className=\"nav-bar\">\n      <button\n        className=\"meme-book\"\n        onClick={(e) => {\n          history.push(\"/homeview\");\n          getNewMemes();\n        }}\n      >\n        Meme <br />\n        <span\n          style={{\n            color: \"black\",\n            fontSize: \"50px\",\n            textShadow: \"0 0 2px white\",\n          }}\n        >\n          Book\n        </span>\n        <br />\n        <small\n          style={{\n            fontFamily: \"fantasy\",\n            fontSize: \"15px\",\n            fontStyle: \"italic\",\n          }}\n        >\n          Click Me to see Wonders..✨🔮🪄\n        </small>\n      </button>\n\n      <Link\n        to=\"/homeview/upload\"\n        className=\"meme-upload\"\n        title=\"Upload Meme\"\n      ></Link>\n      <Link\n        to=\"/homeview/create\"\n        className=\"meme-create\"\n        title=\"Create Meme\"\n      ></Link>\n\n      <Dropdown>\n        <Dropdown.Toggle id=\"custom\">\n          <NavLink\n            to=\"/homeview/profile\"\n            className=\"meme-profile\"\n            style={\n              profileAvailable\n                ? { backgroundImage: `url(\"${parsedProfilePic?.profilePic}\")` }\n                : { backgroundImage: `url(${avatar})` }\n            }\n            title=\"Set Profile\"\n            s\n          ></NavLink>\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item\n            href=\"\"\n            onClick={(e) => {\n              history.push(\"/homeview/setprofile\");\n            }}\n          >\n            Set Profile\n          </Dropdown.Item>\n          <Dropdown.Item\n            href=\"\"\n            onClick={(e) => {\n              window.localStorage.clear();\n              history.push(\"/\");\n            }}\n          >\n            Logout\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/CreateMeme.jsx",["162","163"],[],"import { ProfileContext } from \"../../context/ProfileContext\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateMemeContext } from \"../../context/CreateMemeContext\";\nimport \"./CreateMeme.css\";\n\nexport default function CreateMeme() {\n  const [createMeme, setCreateMeme] = useContext(CreateMemeContext);\n  const [inputText, setInputText] = useState([]);\n  const [imageForMeme, setImageForMeme] = useState();\n  const [memesFromApi, setMemesFromApi] = useState();\n  const [currentGeneratedMeme, setCurrentGeneratedMeme] = useState();\n  const history = useHistory();\n  const [idea, setIdea] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((res) => res.json())\n      .then((body) => {\n        setMemesFromApi([...body.data.memes]);\n      });\n  }, []);\n\n  const handleInputChange = (e) => {\n    setInputText({ ...inputText, [e.target.name]: e.target.value });\n    console.log(inputText.topText);\n  };\n\n  const memesINeed = memesFromApi?.filter((meme) => {\n    return meme.box_count === 2;\n  });\n\n  const handleGenerate = (e) => {\n    e.preventDefault();\n    const randomMemeTemplate = Math.floor(Math.random() * memesINeed.length);\n    setCurrentGeneratedMeme(memesINeed[randomMemeTemplate]);\n    const randomMemeTemplateUrl = memesINeed[randomMemeTemplate].url;\n    setImageForMeme(randomMemeTemplateUrl);\n    console.log(memesINeed[randomMemeTemplate].box_count);\n    history.push(`/homeview/create/${memesINeed[randomMemeTemplate].name}`);\n  };\n\n  const handleCreate = (e) => {\n    e.preventDefault();\n    const currentMeme = currentGeneratedMeme;\n    console.log(currentMeme);\n    const formData = new FormData();\n\n    formData.append(\"username\", \"ajay.gh\");\n    formData.append(\"password\", \"Dharan123\");\n    formData.append(\"template_id\", currentMeme.id);\n    formData.append(\"text0\", inputText.topText);\n    formData.append(\"text1\", inputText.bottomText);\n\n    fetch(\"https://api.imgflip.com/caption_image\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((body) => {\n        console.log(body);\n        setCreateMeme(body.data);\n      })\n      .catch((error) => console.log(\"Error:\", error));\n  };\n\n  const handleIdea = (e) => {\n    e.preventDefault();\n    fetch(\"https://jokeapi-v2.p.rapidapi.com/joke/Any?type=single\", {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"jokeapi-v2.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"285626be1emsh6252dd238a98631p1c38c5jsn328387bb55ff\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setIdea(data.joke);\n      });\n\n    const wordsMatch = idea.match(/(\\w+)/g);\n    //    \\w+    between one and unlimited word characters\n    //    /g     greedy - don't stop after the first match\n    const words = wordsMatch.length;\n    console.log(words);\n\n    if (words < 30) {\n      const firstHalf = idea.split(\" \", words / 2).join(\" \");\n      console.log(firstHalf);\n\n      const secondHalf = idea\n        .split(\" \")\n        .slice(words / 2)\n        .join(\" \");\n      console.log(secondHalf);\n\n      setInputText({ topText: firstHalf, bottomText: secondHalf });\n    }\n  };\n  const handleDownload = (e) => {\n    e.preventDefault();\n    fetch(createMeme.url, {\n      method: \"GET\",\n      headers: {},\n    }).then((res) => {\n      res\n        .arrayBuffer()\n        .then(function (buffer) {\n          const downloadUrl = window.URL.createObjectURL(new Blob([buffer]));\n          const link = document.createElement(\"a\");\n          link.href = downloadUrl;\n          link.setAttribute(\"download\", \"memeFromApi.png\" );\n          document.body.appendChild(link);\n          link.click();\n        })\n        .catch((error) => {\n          console.log(\"Error from download\", error);\n        });\n    });\n    history.push(\"/homeview/upload\")\n    setCreateMeme();\n  };\n\n  console.log(createMeme);\n  return (\n    <div className=\"container\">\n      <div className=\"create-show\">\n        <form method=\"post\" className=\"form\">\n          <label className=\"label-top\">\n            Alright, Lets Create a Meme\n            <br />\n            <br />\n            🤭\n          </label>\n          <br /> <br />\n          <button className=\"label\" onClick={handleGenerate}>\n            Generate Meme Template\n          </button>\n          <br />\n          <label forhtml=\"fullName\">Top Text: </label>\n          <br />\n          <textarea\n            type=\"text\"\n            name=\"topText\"\n            onChange={handleInputChange}\n          ></textarea>\n          <br />\n          <label forhtml=\"fullName\">Bottom Text: </label>\n          <br />\n          <textarea\n            type=\"text\"\n            name=\"bottomText\"\n            onChange={handleInputChange}\n          ></textarea>\n          <br /> <br/>\n          <label style={{fontFamily: \"fantasy\", fontWeight: \"900\", fontSize: \"20px\"}}>Click \"Need Idea?\" couple times to see Magic 🤭 </label>\n          <br/>\n          <label>⬇️⬇️⬇️</label>\n          <br/>\n          <button className=\"label\" onClick={handleIdea}>\n            Need Idea?\n          </button>\n          <br/> <br/>\n          {imageForMeme ? (\n            <div className=\"meme\">\n              <img src={imageForMeme} alt=\"meme\" />\n              <h2 className=\"top\">{inputText.topText}</h2>\n              <h2 className=\"bottom\">{inputText.bottomText}</h2>\n            </div>\n          ) : null}\n          <br />\n          <button className=\"label\" onClick={handleCreate}>\n            Create\n          </button>\n          <br /> <br />\n          {createMeme ? (\n            <img\n              src={createMeme.url}\n              alt=\"meme\"\n              style={{ height: \"auto\", width: \"auto\" }}\n            />\n          ) : null}\n          <br /> <br />\n          <button className=\"label\" onClick={handleDownload}>\n            Download\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/Upload.jsx",["164","165"],[],"import \"./Upload.scss\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { UploadMemeContext } from \"../../context/UploadMemeContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { db, auth, storage } from \"../../firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { collection,addDoc} from \"firebase/firestore\";\n\nexport default function Upload({\n}) {\n  const [uploadMeme, setUploadMeme] = useContext(UploadMemeContext);\n  const [memeImageHehe, SetMemeImageHehe] = useState()\n  const [imageLoad, setImageLoad] = useState(null);\n  const history = useHistory();\n\n\n  function ShowPreview(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      const src = e.target.files[0];\n      SetMemeImageHehe(src);\n    }\n  }\n  function RemovePreview() {\n    SetMemeImageHehe();\n  }\n\n  useEffect(() => {\n    const uploadFile = () => {\n      const name = new Date().getTime() + memeImageHehe.name;\n      console.log(name);\n      const storageRef = ref(storage, memeImageHehe.name);\n      const uploadTask = uploadBytesResumable(storageRef, memeImageHehe);\n\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log(\"Upload is \" + progress + \"% done\");\n          setImageLoad(progress);\n          switch (snapshot.state) {\n            case \"paused\":\n              console.log(\"Upload is paused\");\n              break;\n            case \"running\":\n              console.log(\"Upload is running\");\n              break;\n            default:\n              break;\n          }\n        },\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n            console.log(\"File available at\", downloadURL);\n            setUploadMeme({ ...uploadMeme, uploadedMeme: downloadURL });\n          });\n        }\n      );\n    };\n    memeImageHehe && uploadFile();\n  }, [memeImageHehe]);\n\n  const handleCaptionInput = (e) => {\n    setUploadMeme({ ...uploadMeme, [e.target.name]: e.target.value });\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    try {\n      const user = auth.currentUser;\n      const memeCollectionRef = collection(db, \"users\", user.uid, \"memes\");\n      await addDoc(memeCollectionRef, {\n        caption: uploadMeme.caption,\n        uploadedMemeImage: uploadMeme.uploadedMeme,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    history.push(\"/homeview\");\n    SetMemeImageHehe();\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"upload-show\">\n        <form method=\"post\" className=\"form\">\n          <label className=\"label-top\">\n            Alright, Lets Upload a Meme\n            <br />\n            <br />\n            🤭\n          </label>\n          <br /> <br />\n          <br /> <br /> <br />\n          <br />\n          {memeImageHehe ? (\n            <div className=\"image\">\n              <img\n                src={URL.createObjectURL(memeImageHehe)}\n                className=\"img\"\n                alt=\"profile-pic\"\n              />\n              <br />\n              <button className=\"remove-image\" onClick={RemovePreview}>\n                Remove\n              </button>\n            </div>\n          ) : null}\n          <br /> <br />\n          <small>Upload Progress: {imageLoad} done!!</small>\n          <br />\n          <label htmlFor=\"file-ip\" className=\"label\">\n            Choose Your Meme\n          </label>\n          <input\n            type=\"file\"\n            id=\"file-ip\"\n            accept=\"image/*\"\n            onChange={(e) => {\n              ShowPreview(e);\n              handleCaptionInput(e);\n            }}\n            hidden\n          ></input>\n          <br /> <br /> <br />\n          <label forhtml=\"fullName\">Say Something About Your Meme: </label>\n          <br /> <br />\n          <input\n            type=\"text\"\n            style={{ height: \"80px\", width: \"auto\" }}\n            name=\"caption\"\n            onChange={handleCaptionInput}\n          ></input>\n          <br /> <br />\n          <button\n            className=\"save-profile\"\n            onClick={handleUpload}\n            disabled={imageLoad !== null && imageLoad < 100}\n          >\n            Upload\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/HomePageView.jsx",["166","167","168","169"],[],"import { useState, useEffect, useContext } from \"react\";\nimport { HomePageContext } from \"../../context/HomePageContext\";\n\nimport MemeContainer from \"./MemeContainer\";\n\nexport default function HomePageView() {\n  return (\n    <div className=\"container\">\n      <MemeContainer />\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/SetUpAccount.jsx",["170","171","172"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\nimport \"./SetUpAccount.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db, auth, storage } from \"../../firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n\nexport default function SetUpAccount({\n  preview,\n  setPreview,\n  showPreview,\n  removePreview,\n}) {\n  const [profile, setProfile, profileAvailable, setProfileAvailable] =\n    useContext(ProfileContext);\n  const [imageLoad, setImageLoad] = useState(null);\n  const history = useHistory();\n\n  const handleInputChange = (e) => {\n    setProfile({ ...profile, [e.target.name]: e.target.value });\n  };\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    try {\n      const user = auth.currentUser;\n      setDoc(doc(db, \"users\", user.uid), {\n        ...profile,\n        // timeStamp: serverTimestamp(),\n      });\n      history.push(\"/homeview\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const uploadFile = () => {\n      const name = new Date().getTime() + preview.name;\n      console.log(name);\n      const storageRef = ref(storage, preview.name);\n      const uploadTask = uploadBytesResumable(storageRef, preview);\n\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log(\"Upload is \" + progress + \"% done\");\n          setImageLoad(progress);\n          switch (snapshot.state) {\n            case \"paused\":\n              console.log(\"Upload is paused\");\n              break;\n            case \"running\":\n              console.log(\"Upload is running\");\n              break;\n            default:\n              break;\n          }\n        },\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n            console.log(\"File available at\", downloadURL);\n            setProfile({ ...profile, profilePic: downloadURL });\n            setProfileAvailable(true);\n          });\n        }\n      );\n    };\n    preview && uploadFile();\n  }, [preview]);\n\n  console.log(profile);\n\n  return (\n    <div className=\"setup-show\">\n      <div className=\"container\">\n        <form method=\"post\" className=\"form\">\n          <label className=\"label-top\">\n            Alright, Lets Create A Profile...hehe <br />\n            <br />\n            🤭\n          </label>\n          <br /> <br />\n          <label forhtml=\"fullName\">Full Name: </label>\n          <input\n            type=\"text\"\n            name=\"fullName\"\n            onChange={handleInputChange}\n          ></input>\n          <br /> <br />\n          <label forhtml=\"fullName\">username: </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            onChange={handleInputChange}\n          ></input>\n          <br /> <br /> <br /> <br /> <br /> <br />\n          {preview ? (\n            <div className=\"image\">\n              <img\n                src={URL.createObjectURL(preview)}\n                className=\"img\"\n                alt=\"profile-pic\"\n              />\n              <br />\n              <button className=\"remove-image\" onClick={removePreview}>\n                Remove\n              </button>\n            </div>\n          ) : null}\n          <br />\n          <br />\n          <small>Upload Progress: {imageLoad} done!!</small>\n          <br />\n          <label htmlFor=\"file-ip\" className=\"label\">\n            Choose Profile Picture{\" \"}\n          </label>\n          <input\n            name=\"image\"\n            type=\"file\"\n            id=\"file-ip\"\n            accept=\"image/*\"\n            onChange={(e) => {\n              showPreview(e);\n              handleInputChange(e);\n            }}\n            hidden\n          ></input>\n          <br /> <br />\n          <button\n            className=\"save-profile\"\n            onClick={handleSave}\n            disabled={imageLoad !== null && imageLoad < 100}\n          >\n            Save\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/App.jsx",["173"],[],"import \"../App.css\";\nimport { Route , Switch, Redirect } from \"react-router-dom\";\nimport LandingPage from \"./AuthForm/LandingPage\";\nimport SignUp from \"./AuthForm/SignUp\";\nimport Login from \"./AuthForm/Login\";\nimport Footer from \"./AuthForm/Footer\";\nimport HomePage from \"./AppContents/HomePage\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\n\n\n\nfunction App() {\n  const [userAvailable, SetUserAvailable] = useContext(AuthContext);\n\n  return (\n    <div>\n        <Switch>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n            </ Route>\n          <Route path=\"/homeview\">\n              {userAvailable ? <HomePage/> :<Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/\">\n            <LandingPage />\n          </Route>\n        </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/AuthContext.jsx",[],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/ProfileContext.jsx",[],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/HomePageContext.jsx",[],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemeContainer.jsx",["174","175","176","177","178"],[],"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/UploadMemeContext.jsx",["179"],[],"import { createContext, useEffect, useState } from \"react\";\n\nconst UploadMemeContext = createContext();\n\nfunction UploadMemeContextProvider({children}){\n    const [uploadMeme, setUploadMeme] = useState({});\n\n    return (\n        <UploadMemeContext.Provider value={[uploadMeme, setUploadMeme]}>\n            {children}    \n        </UploadMemeContext.Provider>\n    );\n};\n\nexport {UploadMemeContext, UploadMemeContextProvider};","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemesFromFBD.jsx",["180","181"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { db, auth } from \"../../firebase\";\nimport { doc, collection, getDocs, deleteDoc } from \"firebase/firestore\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\n\nexport default function MemesFromFBD() {\n  const [allUploadedMemes, SetAllUploadedMemes] = useState([]);\n  const [profile, setProfile] = useContext(ProfileContext);\n\n  const user = auth.currentUser;\n  const memeCollectionRef = collection(db, \"users\", user.uid, \"memes\");\n\n  useEffect(() => {\n    getAllUploadedMemes();\n  }, []);\n\n  const getAllUploadedMemes = async () => {\n    const uploadedMemes = await getDocs(memeCollectionRef);\n    SetAllUploadedMemes(\n      uploadedMemes.docs.map((doc) => ({ ...doc.data(), id: doc.id }))\n    );\n  };\n\n  const deleteMeme = (id) => {\n    const memeDoc = doc(db, \"users\", user.uid, \"memes\", id );\n    return deleteDoc(memeDoc);\n  };\n\n  const handleDelete = async(id) => {\n      await deleteMeme(id);\n      getAllUploadedMemes();\n  }\n\n  const userName = localStorage.getItem(\"profile\", JSON.stringify(profile));\n  const parsedUserName = JSON.parse(userName);\n\n  const uploadedMemeToDisplay = allUploadedMemes.map((meme, index) => {\n    const meme_url = meme.uploadedMemeImage;\n    return (\n      <div className=\"meme-container\" key={index + 1}>\n        <h4 style={{ float: \"left\" }}>{parsedUserName?.username}</h4>\n        <br />\n        <small\n          style={{\n            fontStyle: \"italic\",\n            fontWeight: \"300\",\n            fontSize: \"15px\",\n            float: \"left\",\n          }}\n        >\n          {meme.caption}\n        </small>\n        <br /> <br />\n        <img src={meme_url} alt={meme.caption} className=\"meme-image\" />\n        <br /> <br />\n        <button style={{backgroundColor: \"red\"}} onClick={(e) => handleDelete(meme.id)}>🗑</button>\n      </div>\n    );\n  });\n\n  return <div>{uploadedMemeToDisplay}</div>;\n}\n","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/CreateMemeContext.jsx",["182"],[],"import { createContext, useEffect, useState } from \"react\";\n\nconst CreateMemeContext = createContext();\n\nfunction CreateMemeContextProvider({children}){\n    const [createMeme, setCreateMeme] = useState();\n\n    return (\n        <CreateMemeContext.Provider value={[createMeme, setCreateMeme]}>\n            {children}    \n        </CreateMemeContext.Provider>\n    );\n};\n\nexport {CreateMemeContext, CreateMemeContextProvider};","/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/UploadCreatedMemeContext.jsx",[],[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"183","replacedBy":"187"},{"ruleId":"185","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":8,"column":10,"nodeType":"191","messageId":"192","endLine":8,"endColumn":22},{"ruleId":"193","severity":1,"message":"194","line":26,"column":20,"nodeType":"195","messageId":"196","endLine":26,"endColumn":21,"suggestions":"197"},{"ruleId":"193","severity":1,"message":"198","line":26,"column":28,"nodeType":"195","messageId":"196","endLine":26,"endColumn":29,"suggestions":"199"},{"ruleId":"193","severity":1,"message":"194","line":26,"column":44,"nodeType":"195","messageId":"196","endLine":26,"endColumn":45,"suggestions":"200"},{"ruleId":"193","severity":1,"message":"198","line":26,"column":52,"nodeType":"195","messageId":"196","endLine":26,"endColumn":53,"suggestions":"201"},{"ruleId":"193","severity":1,"message":"198","line":26,"column":61,"nodeType":"195","messageId":"196","endLine":26,"endColumn":62,"suggestions":"202"},{"ruleId":"193","severity":1,"message":"198","line":26,"column":65,"nodeType":"195","messageId":"196","endLine":26,"endColumn":66,"suggestions":"203"},{"ruleId":"193","severity":1,"message":"194","line":26,"column":81,"nodeType":"195","messageId":"196","endLine":26,"endColumn":82,"suggestions":"204"},{"ruleId":"193","severity":1,"message":"198","line":26,"column":89,"nodeType":"195","messageId":"196","endLine":26,"endColumn":90,"suggestions":"205"},{"ruleId":"193","severity":1,"message":"194","line":26,"column":106,"nodeType":"195","messageId":"196","endLine":26,"endColumn":107,"suggestions":"206"},{"ruleId":"193","severity":1,"message":"198","line":26,"column":114,"nodeType":"195","messageId":"196","endLine":26,"endColumn":115,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":84,"column":6,"nodeType":"210","endLine":84,"endColumn":23,"suggestions":"211"},{"ruleId":"189","severity":1,"message":"212","line":15,"column":10,"nodeType":"191","messageId":"192","endLine":15,"endColumn":21},{"ruleId":"189","severity":1,"message":"213","line":15,"column":39,"nodeType":"191","messageId":"192","endLine":15,"endColumn":52},{"ruleId":"183","replacedBy":"214"},{"ruleId":"185","replacedBy":"215"},{"ruleId":"183","replacedBy":"216"},{"ruleId":"185","replacedBy":"217"},{"ruleId":"189","severity":1,"message":"218","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":27},{"ruleId":"189","severity":1,"message":"219","line":8,"column":10,"nodeType":"191","messageId":"192","endLine":8,"endColumn":25},{"ruleId":"189","severity":1,"message":"220","line":10,"column":10,"nodeType":"191","messageId":"192","endLine":10,"endColumn":22},{"ruleId":"189","severity":1,"message":"221","line":13,"column":19,"nodeType":"191","messageId":"192","endLine":13,"endColumn":29},{"ruleId":"189","severity":1,"message":"222","line":13,"column":49,"nodeType":"191","messageId":"192","endLine":13,"endColumn":68},{"ruleId":"189","severity":1,"message":"223","line":16,"column":10,"nodeType":"191","messageId":"192","endLine":16,"endColumn":24},{"ruleId":"189","severity":1,"message":"224","line":16,"column":26,"nodeType":"191","messageId":"192","endLine":16,"endColumn":43},{"ruleId":"189","severity":1,"message":"225","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":24},{"ruleId":"189","severity":1,"message":"226","line":2,"column":33,"nodeType":"191","messageId":"192","endLine":2,"endColumn":39},{"ruleId":"227","severity":1,"message":"228","line":9,"column":32,"nodeType":"229","messageId":"230","endLine":10,"endColumn":2},{"ruleId":"208","severity":1,"message":"231","line":64,"column":6,"nodeType":"210","endLine":64,"endColumn":21,"suggestions":"232"},{"ruleId":"189","severity":1,"message":"233","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":18},{"ruleId":"189","severity":1,"message":"234","line":1,"column":20,"nodeType":"191","messageId":"192","endLine":1,"endColumn":29},{"ruleId":"189","severity":1,"message":"218","line":1,"column":31,"nodeType":"191","messageId":"192","endLine":1,"endColumn":41},{"ruleId":"189","severity":1,"message":"219","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":25},{"ruleId":"189","severity":1,"message":"235","line":5,"column":23,"nodeType":"191","messageId":"192","endLine":5,"endColumn":38},{"ruleId":"189","severity":1,"message":"236","line":15,"column":31,"nodeType":"191","messageId":"192","endLine":15,"endColumn":47},{"ruleId":"208","severity":1,"message":"237","line":76,"column":6,"nodeType":"210","endLine":76,"endColumn":15,"suggestions":"238"},{"ruleId":"189","severity":1,"message":"239","line":14,"column":25,"nodeType":"191","messageId":"192","endLine":14,"endColumn":41},{"ruleId":"189","severity":1,"message":"234","line":1,"column":29,"nodeType":"191","messageId":"192","endLine":1,"endColumn":38},{"ruleId":"189","severity":1,"message":"233","line":1,"column":40,"nodeType":"191","messageId":"192","endLine":1,"endColumn":48},{"ruleId":"189","severity":1,"message":"240","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":27},{"ruleId":"189","severity":1,"message":"241","line":9,"column":24,"nodeType":"191","messageId":"192","endLine":9,"endColumn":39},{"ruleId":"242","severity":1,"message":"243","line":11,"column":66,"nodeType":"244","messageId":"245","endLine":11,"endColumn":68},{"ruleId":"189","severity":1,"message":"234","line":1,"column":25,"nodeType":"191","messageId":"192","endLine":1,"endColumn":34},{"ruleId":"189","severity":1,"message":"221","line":8,"column":19,"nodeType":"191","messageId":"192","endLine":8,"endColumn":29},{"ruleId":"208","severity":1,"message":"246","line":15,"column":6,"nodeType":"210","endLine":15,"endColumn":8,"suggestions":"247"},{"ruleId":"189","severity":1,"message":"234","line":1,"column":25,"nodeType":"191","messageId":"192","endLine":1,"endColumn":34},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],["248"],["249"],"no-unused-vars","'emailIsValid' is assigned a value but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["250","251"],"Unnecessary escape character: \\\".",["252","253"],["254","255"],["256","257"],["258","259"],["260","261"],["262","263"],["264","265"],["266","267"],["268","269"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'password'. Either include it or remove the dependency array.","ArrayExpression",["270"],"'currentUser' is assigned a value but never used.","'userAvailable' is assigned a value but never used.",["248"],["249"],["248"],["249"],"'useContext' is defined but never used.","'HomePageContext' is defined but never used.","'homePageData' is assigned a value but never used.","'setProfile' is assigned a value but never used.","'setProfileAvailable' is assigned a value but never used.","'profilePicture' is assigned a value but never used.","'setProfilePicture' is assigned a value but never used.","'ProfileContext' is defined but never used.","'useRef' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has missing dependencies: 'setUploadMeme' and 'uploadMeme'. Either include them or remove the dependency array.",["271"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'serverTimestamp' is defined but never used.","'profileAvailable' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'profile', 'setProfile', and 'setProfileAvailable'. Either include them or remove the dependency array.",["272"],"'SetUserAvailable' is assigned a value but never used.","'UploadMemeContext' is defined but never used.","'setHomePageData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'getAllUploadedMemes'. Either include it or remove the dependency array.",["273"],"no-global-assign","no-unsafe-negation",{"messageId":"274","fix":"275","desc":"276"},{"messageId":"277","fix":"278","desc":"279"},{"messageId":"274","fix":"280","desc":"276"},{"messageId":"277","fix":"281","desc":"279"},{"messageId":"274","fix":"282","desc":"276"},{"messageId":"277","fix":"283","desc":"279"},{"messageId":"274","fix":"284","desc":"276"},{"messageId":"277","fix":"285","desc":"279"},{"messageId":"274","fix":"286","desc":"276"},{"messageId":"277","fix":"287","desc":"279"},{"messageId":"274","fix":"288","desc":"276"},{"messageId":"277","fix":"289","desc":"279"},{"messageId":"274","fix":"290","desc":"276"},{"messageId":"277","fix":"291","desc":"279"},{"messageId":"274","fix":"292","desc":"276"},{"messageId":"277","fix":"293","desc":"279"},{"messageId":"274","fix":"294","desc":"276"},{"messageId":"277","fix":"295","desc":"279"},{"messageId":"274","fix":"296","desc":"276"},{"messageId":"277","fix":"297","desc":"279"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},"removeEscape",{"range":"306","text":"307"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"308","text":"309"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"310","text":"307"},{"range":"311","text":"309"},{"range":"312","text":"307"},{"range":"313","text":"309"},{"range":"314","text":"307"},{"range":"315","text":"309"},{"range":"316","text":"307"},{"range":"317","text":"309"},{"range":"318","text":"307"},{"range":"319","text":"309"},{"range":"320","text":"307"},{"range":"321","text":"309"},{"range":"322","text":"307"},{"range":"323","text":"309"},{"range":"324","text":"307"},{"range":"325","text":"309"},{"range":"326","text":"307"},{"range":"327","text":"309"},"Update the dependencies array to be: [confirmPassword, password]",{"range":"328","text":"329"},"Update the dependencies array to be: [memeImageHehe, setUploadMeme, uploadMeme]",{"range":"330","text":"331"},"Update the dependencies array to be: [preview, profile, setProfile, setProfileAvailable]",{"range":"332","text":"333"},"Update the dependencies array to be: [getAllUploadedMemes]",{"range":"334","text":"335"},[1124,1125],"",[1124,1124],"\\",[1132,1133],[1132,1132],[1148,1149],[1148,1148],[1156,1157],[1156,1156],[1165,1166],[1165,1165],[1169,1170],[1169,1169],[1185,1186],[1185,1185],[1193,1194],[1193,1193],[1210,1211],[1210,1210],[1218,1219],[1218,1218],[2550,2567],"[confirmPassword, password]",[2036,2051],"[memeImageHehe, setUploadMeme, uploadMeme]",[2302,2311],"[preview, profile, setProfile, setProfileAvailable]",[569,571],"[getAllUploadedMemes]"]