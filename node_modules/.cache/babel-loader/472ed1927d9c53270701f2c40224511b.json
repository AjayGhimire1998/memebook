{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemeContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { HomePageContext } from \"../../context/HomePageContext\";\nimport \"./MemeContainer.css\"; // import { ProfileContext } from \"../../context/ProfileContext\";\n\nimport { UploadMemeContext } from \"../../context/UploadMemeContext\";\nimport MemesFromFBD from \"./MemesFromFBD\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemeContainer() {\n  _s();\n\n  const [homePageData, setHomePageData] = useContext(HomePageContext);\n  const [uploadMeme, setUploadMeme] = useContext(UploadMemeContext);\n  const memeToDisplay = homePageData.slice(2, 22).map((d, index) => {\n    if (d.data.post_hint === \"image\") {\n      const image_url = d.data.url_overridden_by_dest;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            float: \"left\"\n          },\n          children: [d.data.author, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            fontStyle: \"italic\",\n            fontWeight: \"300\",\n            fontSize: \"15px\",\n            float: \"left\"\n          },\n          children: d.data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image_url,\n          alt: d.data.title,\n          className: \"meme-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 18\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    }\n  }); // const myMemeImage = localStorage.getItem(\"profile\", JSON.stringify(profile));\n  // const myMemeCaption = localStorage.getItem(\"uploadedMeme\", JSON.stringify(uploadMeme))\n  // const parsedMemeImage = JSON.parse(myMemeImage);\n  // const parsedMemeCaption = JSON.parse(myMemeCaption);\n  // const newAddedMemeData = {\n  //   \"parsedUsername\": parsedMemeImage.username,\n  //   \"parsedMemeImage\": parsedMemeImage.uploadedMeme,\n  //   \"parsedCaption\": parsedMemeCaption.caption\n  // }\n  // const [newMemeData, setNewMemeData] = useState({})\n  // useEffect(() => {\n  //   setNewMemeData(newAddedMemeData)\n  // },[newMemeData]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MemesFromFBD, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), memeToDisplay]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MemeContainer, \"ddHMcwZpePxajLS+ku9lRSOVL6I=\");\n\n_c = MemeContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemeContainer\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemeContainer.jsx"],"names":["React","useContext","useEffect","useState","HomePageContext","UploadMemeContext","MemesFromFBD","MemeContainer","homePageData","setHomePageData","uploadMeme","setUploadMeme","memeToDisplay","slice","map","d","index","data","post_hint","image_url","url_overridden_by_dest","float","author","fontStyle","fontWeight","fontSize","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAO,qBAAP,C,CACA;;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,UAAU,CAACG,eAAD,CAAlD;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BV,UAAU,CAACI,iBAAD,CAA9C;AACA,QAAMO,aAAa,GAAGJ,YAAY,CAACK,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,EAA0BC,GAA1B,CAA8B,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAChE,QAAID,CAAC,CAACE,IAAF,CAAOC,SAAP,KAAqB,OAAzB,EAAkC;AAChC,YAAMC,SAAS,GAAGJ,CAAC,CAACE,IAAF,CAAOG,sBAAzB;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAX;AAAA,qBAA+BN,CAAC,CAACE,IAAF,CAAOK,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,SAAS,EAAE,QADN;AAELC,YAAAA,UAAU,EAAE,KAFP;AAGLC,YAAAA,QAAQ,EAAE,MAHL;AAILJ,YAAAA,KAAK,EAAE;AAJF,WADT;AAAA,oBAQGN,CAAC,CAACE,IAAF,CAAOS;AARV;AAAA;AAAA;AAAA;AAAA,gBAHF,eAaE;AAAA;AAAA;AAAA;AAAA,gBAbF,oBAaS;AAAA;AAAA;AAAA;AAAA,gBAbT,eAcE;AAAK,UAAA,GAAG,EAAEP,SAAV;AAAqB,UAAA,GAAG,EAAEJ,CAAC,CAACE,IAAF,CAAOS,KAAjC;AAAwC,UAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE;AAAA;AAAA;AAAA;AAAA,gBAfF,oBAeS;AAAA;AAAA;AAAA;AAAA,gBAfT;AAAA,SAAqCV,KAArC;AAAA;AAAA;AAAA;AAAA,cADF;AAoBD;AACF,GAxBqB,CAAtB,CAHsC,CA6BtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;AAEA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,aAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApDuBL,a;;KAAAA,a","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { HomePageContext } from \"../../context/HomePageContext\";\nimport \"./MemeContainer.css\";\n// import { ProfileContext } from \"../../context/ProfileContext\";\nimport { UploadMemeContext } from \"../../context/UploadMemeContext\";\nimport MemesFromFBD from \"./MemesFromFBD\";\n\nexport default function MemeContainer() {\n  const [homePageData, setHomePageData] = useContext(HomePageContext);\n  const [uploadMeme, setUploadMeme] = useContext(UploadMemeContext)\n  const memeToDisplay = homePageData.slice(2, 22).map((d, index) => {\n    if (d.data.post_hint === \"image\") {\n      const image_url = d.data.url_overridden_by_dest;\n      return (\n        <div className=\"meme-container\" key={index}>\n          <h4 style={{ float: \"left\" }}>{d.data.author}:</h4>\n          <br />\n          <small\n            style={{\n              fontStyle: \"italic\",\n              fontWeight: \"300\",\n              fontSize: \"15px\",\n              float: \"left\",\n            }}\n          >\n            {d.data.title}\n          </small>\n          <br /> <br />\n          <img src={image_url} alt={d.data.title} className=\"meme-image\" />\n          <br /> <br />\n\n        </div>\n      );\n    }\n  });\n\n  // const myMemeImage = localStorage.getItem(\"profile\", JSON.stringify(profile));\n  // const myMemeCaption = localStorage.getItem(\"uploadedMeme\", JSON.stringify(uploadMeme))\n  // const parsedMemeImage = JSON.parse(myMemeImage);\n  // const parsedMemeCaption = JSON.parse(myMemeCaption);\n  // const newAddedMemeData = {\n  //   \"parsedUsername\": parsedMemeImage.username,\n  //   \"parsedMemeImage\": parsedMemeImage.uploadedMeme,\n  //   \"parsedCaption\": parsedMemeCaption.caption\n  // }\n\n  // const [newMemeData, setNewMemeData] = useState({})\n\n  // useEffect(() => {\n  //   setNewMemeData(newAddedMemeData)\n\n  // },[newMemeData]);\n\n  return (\n    <div>\n      <MemesFromFBD />\n      {memeToDisplay}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}