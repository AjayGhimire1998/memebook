{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Signup.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n\n  const [emailIsValid, setEmailIsValid] = useState(false);\n  const [error, setError] = useState(true);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [passwordIsValid, setPasswordIsValid] = useState(false);\n  const [passwordIsValidError, setPasswordIsValidError] = useState(true);\n  const [requireTextField, setRequireTextField] = useState(false);\n  const [requiredError, setRequiredError] = useState(\"\");\n  const [signError, setSignError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPasword] = useState(\"\"); // const [passwordMatch, setPasswordMatch] = useState(true);\n\n  const [confirmError, setConfirmError] = useState(true);\n\n  function validateEmail(e) {\n    const email = e.target.value;\n    const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n    if (regex.test(email)) {\n      setEmailIsValid(true);\n      setError(false);\n    } else {\n      setEmailIsValid(false);\n      setError(true);\n    }\n  }\n\n  function tooglePassword() {\n    setShowPassword(!showPassword);\n  }\n\n  function toogleConfirmPass() {\n    setShowConfirmPass(!showConfirmPass);\n  }\n\n  function validatePassword(e) {\n    const passWord = e.target.value;\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/;\n\n    if (passwordRegex.test(passWord)) {\n      setPasswordIsValid(true);\n      setPasswordIsValidError(false);\n    } else {\n      setPasswordIsValid(false);\n      setPasswordIsValidError(true);\n    }\n  }\n\n  function requiredField(e) {\n    if (e.target.value.length === 0) {\n      setRequireTextField(true);\n      setRequiredError(\"*required\");\n    } else {\n      setRequireTextField(false);\n      setRequiredError(\"\");\n    }\n  }\n\n  function handleEmailInput(e) {\n    setEmail(e.target.value);\n  }\n\n  function handlePasswordInput(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleConfirmPasswordInput(e) {\n    setConfirmPasword(e.target.value);\n  }\n\n  useEffect(() => {\n    if (password !== confirmPassword) {\n      // setPasswordMatch(false);\n      setConfirmError(true);\n    } else {\n      setConfirmError(false);\n    }\n  }, [confirmPassword]); // function confirmPasswordChange() {\n  //   console.log(password, confirmPassword);\n  // }\n\n  const history = useHistory();\n\n  function handleSignUpClick(e) {\n    e.preventDefault();\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      const user = userCredential.user;\n      console.log(user);\n      history.push(\"./login\");\n    }).catch(error => {\n      console.log(error);\n\n      if (error.code === \"auth/email-already-in-use\") {\n        setSignError(error.message);\n      } else {\n        setSignError(\"All fields must have valid data!\");\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/homeview\",\n      className: \"meme-book\",\n      children: [\"Meme \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"black\",\n          fontSize: \"50px\",\n          textShadow: \"0 0 2px white\"\n        },\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-up-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            fontSize: \"35px\",\n            fontWeight: \"800\",\n            fontFamily: \"Copperplate, Copperplate Gothic Light,fantasy\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            onChange: e => {\n              handleEmailInput(e);\n              validateEmail(e);\n              requiredField(e);\n            },\n            className: requireTextField ? \"required-text\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              color: \"red\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: requiredError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: error ? /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Email format is not valid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                color: \"green\"\n              },\n              children: \"Email format is valid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? \"text\" : \"password\",\n            name: \"password\",\n            onChange: e => {\n              handlePasswordInput(e); // passwordCheck(authData, e);\n\n              validatePassword(e);\n            },\n            className: passwordIsValid ? \"\" : \"required-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              color: \"red\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: requiredError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: tooglePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [showPassword ? \" Hide \" : \" Show \", \" Password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: passwordIsValidError ? /*#__PURE__*/_jsxDEV(\"small\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"\\\"Password must be 6-30 characters long and must have at least one Number, Uppercase, Lowercase and a Special character!\\\"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n                style: {\n                  color: \"green\"\n                },\n                children: \"Your password is valid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirm-password\",\n            children: \"Confirm Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showConfirmPass ? \"text\" : \"password\",\n            name: \"confirmPassword\",\n            onChange: e => {\n              // handleInput(e);\n              requiredField(e);\n              handleConfirmPasswordInput(e); // confirmPasswordChange(e);\n            },\n            className: requireTextField ? \"required-text\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              color: \"red\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: requiredError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: toogleConfirmPass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [showConfirmPass ? \" Hide \" : \" Show \", \" Password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: confirmError ? /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Password doesn't match\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                color: \"green\"\n              },\n              children: \"\\\"Password Matches, All Good!!\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"By clicking the \\\"SignUp\\\" button below, you agree to all terms and conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: \"red\"\n          },\n          children: signError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"landing-signup\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            to: \"/login\",\n            className: \"signup-button\",\n            onClick: handleSignUpClick,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"D1pwgeoClMfU3CpzefqSztRqCtg=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/SignUp.jsx"],"names":["React","useEffect","useState","NavLink","createUserWithEmailAndPassword","auth","useHistory","SignUp","emailIsValid","setEmailIsValid","error","setError","showPassword","setShowPassword","showConfirmPass","setShowConfirmPass","passwordIsValid","setPasswordIsValid","passwordIsValidError","setPasswordIsValidError","requireTextField","setRequireTextField","requiredError","setRequiredError","signError","setSignError","email","setEmail","password","setPassword","confirmPassword","setConfirmPasword","confirmError","setConfirmError","validateEmail","e","target","value","regex","test","tooglePassword","toogleConfirmPass","validatePassword","passWord","passwordRegex","requiredField","length","handleEmailInput","handlePasswordInput","handleConfirmPasswordInput","history","handleSignUpClick","preventDefault","then","userCredential","user","console","log","push","catch","code","message","color","fontSize","textShadow","textAlign","fontWeight","fontFamily"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Signup.scss\";\n\nexport default function SignUp() {\n  const [emailIsValid, setEmailIsValid] = useState(false);\n  const [error, setError] = useState(true);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [passwordIsValid, setPasswordIsValid] = useState(false);\n  const [passwordIsValidError, setPasswordIsValidError] = useState(true);\n  const [requireTextField, setRequireTextField] = useState(false);\n  const [requiredError, setRequiredError] = useState(\"\");\n\n  const [signError, setSignError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPasword] = useState(\"\");\n  // const [passwordMatch, setPasswordMatch] = useState(true);\n  const [confirmError, setConfirmError] = useState(true);\n\n  function validateEmail(e) {\n    const email = e.target.value;\n    const regex =\n      /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    if (regex.test(email)) {\n      setEmailIsValid(true);\n      setError(false);\n    } else {\n      setEmailIsValid(false);\n      setError(true);\n    }\n  }\n\n  function tooglePassword() {\n    setShowPassword(!showPassword);\n  }\n  function toogleConfirmPass() {\n    setShowConfirmPass(!showConfirmPass);\n  }\n\n  function validatePassword(e) {\n    const passWord = e.target.value;\n    const passwordRegex =\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/;\n    if (passwordRegex.test(passWord)) {\n      setPasswordIsValid(true);\n      setPasswordIsValidError(false);\n    } else {\n      setPasswordIsValid(false);\n      setPasswordIsValidError(true);\n    }\n  }\n\n  function requiredField(e) {\n    if (e.target.value.length === 0) {\n      setRequireTextField(true);\n      setRequiredError(\"*required\");\n    } else {\n      setRequireTextField(false);\n      setRequiredError(\"\");\n    }\n  }\n\n  function handleEmailInput(e) {\n    setEmail(e.target.value);\n  }\n  function handlePasswordInput(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleConfirmPasswordInput(e) {\n    setConfirmPasword(e.target.value);\n  }\n\n  useEffect(()=>{\n    if (password !== confirmPassword) {\n      // setPasswordMatch(false);\n      setConfirmError(true);\n    } else {\n      setConfirmError(false);\n    }\n  }, [confirmPassword])\n\n  // function confirmPasswordChange() {\n  //   console.log(password, confirmPassword);\n\n    \n    \n   \n  // }\n\n  const history = useHistory();\n\n  function handleSignUpClick(e) {\n    e.preventDefault();\n\n    createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        console.log(user);\n        history.push(\"./login\");\n      })\n      .catch((error) => {\n        console.log(error);\n        if (error.code === \"auth/email-already-in-use\") {\n          setSignError(error.message);\n        } else {\n          setSignError(\"All fields must have valid data!\");\n        }\n      });\n  }\n\n  return (\n    <div>\n      <NavLink to=\"/homeview\" className=\"meme-book\">\n        Meme <br />\n        <span\n          style={{\n            color: \"black\",\n            fontSize: \"50px\",\n            textShadow: \"0 0 2px white\",\n          }}\n        >\n          Book\n        </span>\n      </NavLink>\n      <div className=\"sign-up-form\">\n        <form method=\"post\">\n          <div\n            style={{\n              textAlign: \"center\",\n              fontSize: \"35px\",\n              fontWeight: \"800\",\n              fontFamily: \"Copperplate, Copperplate Gothic Light,fantasy\",\n            }}\n          >\n            <label>Sign Up</label>\n          </div>\n          {/* <div>\n          <br />\n          <label htmlFor=\"first-name\">First Name: </label>\n          <input\n            type=\"text\"\n            onChange={(e) => {\n              // handleInput(e);\n              requiredField(e);\n            }}\n            name=\"firstname\"\n            className={requireTextField ? \"required-text\" : \"\"}\n          />\n          <br />\n          <small style={{ color: \"red\" }}>\n            <i>{requiredError}</i>\n          </small>\n        </div>\n        <div>\n          <br />\n          <label htmlFor=\"last-name\">Last Name: </label>\n          <input\n            type=\"text\"\n            name=\"lastname\"\n            className={requireTextField ? \"required-text\" : \"\"}\n            // onChange={handleInput}\n          />\n          <br />\n          <small style={{ color: \"red\" }}>\n            <i>{requiredError}</i>\n          </small>\n        </div> */}\n          <div>\n            <br />\n            <label htmlFor=\"email\">Email: </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={(e) => {\n                handleEmailInput(e);\n                validateEmail(e);\n                requiredField(e);\n              }}\n              className={requireTextField ? \"required-text\" : \"\"}\n            />\n            <br />\n            <small style={{ color: \"red\" }}>\n              <i>{requiredError}</i>\n            </small>\n            <br />\n            <i>\n              {error ? (\n                <small style={{ color: \"red\" }}>\n                  Email format is not valid\n                </small>\n              ) : (\n                <small style={{ color: \"green\" }}>Email format is valid</small>\n              )}\n            </i>\n          </div>\n          <div>\n            <br />\n            <label htmlFor=\"password\">Password: </label>\n            <input\n              type={showPassword ? \"text\" : \"password\"}\n              name=\"password\"\n              onChange={(e) => {\n                handlePasswordInput(e);\n                // passwordCheck(authData, e);\n                validatePassword(e);\n              }}\n              className={passwordIsValid ? \"\" : \"required-text\"}\n            />\n            <br />\n            <small style={{ color: \"red\" }}>\n              <i>{requiredError}</i>\n            </small>\n            <br />\n            <input type=\"checkbox\" onClick={tooglePassword} />\n            <small>{showPassword ? \" Hide \" : \" Show \"} Password</small>\n            {/* <br />\n          <small style={{ color: \"red\" }}>\n            <i>{passwordError}</i>\n          </small>\n          <br /> */}\n            <br />\n            <small>\n              <i>\n                {passwordIsValidError ? (\n                  <small style={{ color: \"red\" }}>\n                    \"Password must be 6-30 characters long and must have at\n                    least one Number, Uppercase, Lowercase and a Special\n                    character!\"\n                  </small>\n                ) : (\n                  <small style={{ color: \"green\" }}>\n                    Your password is valid\n                  </small>\n                )}\n              </i>\n            </small>\n          </div>\n          <div>\n            <br />\n            <label htmlFor=\"confirm-password\">Confirm Password: </label>\n            <input\n              type={showConfirmPass ? \"text\" : \"password\"}\n              name=\"confirmPassword\"\n              onChange={(e) => {\n                // handleInput(e);\n                requiredField(e);\n                handleConfirmPasswordInput(e);\n                // confirmPasswordChange(e);\n              }}\n              className={requireTextField ? \"required-text\" : \"\"}\n            />\n            <br />\n            <small style={{ color: \"red\" }}>\n              <i>{requiredError}</i>\n            </small>\n            <br />\n            <input type=\"checkbox\" onClick={toogleConfirmPass} />\n            <small>{showConfirmPass ? \" Hide \" : \" Show \"} Password</small>\n            <br />\n            <i>\n              {confirmError ? (\n                <small style={{ color: \"red\" }}>Password doesn't match</small>\n              ) : (\n                <small style={{ color: \"green\" }}>\n                  \"Password Matches, All Good!!\"\n                </small>\n              )}\n            </i>\n          </div>\n          {/* <div>\n          <br />\n          <label htmlFor=\"username\">Set UserName: </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            onChange={(e) => {\n              // handleInput(e);\n              requiredField(e);\n            }}\n            className={requireTextField ? \"required-text\" : \"\"}\n          />\n          <br />\n          <small style={{ color: \"red\" }}>\n            <i>{requiredError}</i>\n          </small>\n        </div> */}\n          <br /> <br />\n          <small>\n            <i>\n              By clicking the \"SignUp\" button below, you agree to all terms and\n              conditions\n            </i>\n          </small>\n          <br /> <br />\n          <small style={{ color: \"red\" }}>{signError}</small>\n          <br /> <br />\n          <div className=\"landing-signup\">\n            <button\n              to=\"/login\"\n              className=\"signup-button\"\n              onClick={handleSignUpClick}\n            >\n              Sign Up\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}