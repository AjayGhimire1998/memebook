{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/CreateMeme.jsx\",\n    _s = $RefreshSig$();\n\nimport { ProfileContext } from \"../../context/ProfileContext\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateMemeContext } from \"../../context/CreateMemeContext\";\nimport \"./CreateMeme.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateMeme() {\n  _s();\n\n  const [createMeme, setCreateMeme] = useContext(CreateMemeContext);\n  const [inputText, setInputText] = useState([]);\n  const [imageForMeme, setImageForMeme] = useState();\n  const [memesFromApi, setMemesFromApi] = useState();\n  const [currentGeneratedMeme, setCurrentGeneratedMeme] = useState();\n  const history = useHistory();\n  const [idea, setIdea] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(body => {\n      setMemesFromApi([...body.data.memes]);\n    });\n  }, []);\n\n  const handleInputChange = e => {\n    setInputText({ ...inputText,\n      [e.target.name]: e.target.value\n    });\n    console.log(inputText.topText);\n  };\n\n  const memesINeed = memesFromApi === null || memesFromApi === void 0 ? void 0 : memesFromApi.filter(meme => {\n    return meme.box_count === 2;\n  });\n\n  const handleGenerate = e => {\n    e.preventDefault();\n    const randomMemeTemplate = Math.floor(Math.random() * memesINeed.length);\n    setCurrentGeneratedMeme(memesINeed[randomMemeTemplate]);\n    const randomMemeTemplateUrl = memesINeed[randomMemeTemplate].url;\n    setImageForMeme(randomMemeTemplateUrl);\n    console.log(memesINeed[randomMemeTemplate].box_count);\n    history.push(`/homeview/create/${memesINeed[randomMemeTemplate].name}`);\n  };\n\n  const handleCreate = e => {\n    e.preventDefault();\n    const currentMeme = currentGeneratedMeme;\n    console.log(currentMeme);\n    const formData = new FormData();\n    formData.append(\"username\", \"ajay.gh\");\n    formData.append(\"password\", \"Dharan123\");\n    formData.append(\"template_id\", currentMeme.id);\n    formData.append(\"text0\", inputText.topText);\n    formData.append(\"text1\", inputText.bottomText);\n    fetch(\"https://api.imgflip.com/caption_image\", {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json()).then(body => {\n      console.log(body);\n      setCreateMeme(body.data);\n    }).catch(error => console.log(\"Error:\", error));\n  };\n\n  const handleIdea = e => {\n    e.preventDefault();\n    fetch(\"https://jokeapi-v2.p.rapidapi.com/joke/Any?type=single\", {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"jokeapi-v2.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"285626be1emsh6252dd238a98631p1c38c5jsn328387bb55ff\"\n      }\n    }).then(response => response.json()).then(data => {\n      setIdea(data.joke);\n    });\n    const wordsMatch = idea.match(/(\\w+)/g); //    \\w+    between one and unlimited word characters\n    //    /g     greedy - don't stop after the first match\n\n    const words = wordsMatch.length;\n    console.log(words);\n\n    if (words < 30) {\n      const firstHalf = idea.split(\" \", words / 2).join(\" \");\n      console.log(firstHalf);\n      const secondHalf = idea.split(\" \").slice(words / 2).join(\" \");\n      console.log(secondHalf);\n      setInputText({\n        topText: firstHalf,\n        bottomText: secondHalf\n      });\n    }\n  };\n\n  const handleDownload = e => {\n    e.preventDefault();\n    fetch(createMeme.url, {\n      method: \"GET\",\n      headers: {}\n    }).then(res => {\n      res.arrayBuffer().then(function (buffer) {\n        const downloadUrl = window.URL.createObjectURL(new Blob([buffer]));\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n        link.setAttribute(\"download\", \"memeFromApi.png\");\n        document.body.appendChild(link);\n        link.click();\n      }).catch(error => {\n        console.log(\"Error from download\", error);\n      });\n    });\n    history.push(\"/homeview/upload\");\n    setCreateMeme();\n  };\n\n  console.log(createMeme);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-show\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-top\",\n          children: [\"Alright, Lets Create a Meme\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), \"\\uD83E\\uDD2D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"label\",\n          onClick: handleGenerate,\n          children: \"Generate Meme Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          forhtml: \"fullName\",\n          children: \"Top Text: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"topText\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          forhtml: \"fullName\",\n          children: \"Bottom Text: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"bottomText\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {},\n          children: \"Click \\\"NEED IDEA?\\\" couple times to see Magic \\uD83E\\uDD2D \\u2B07\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"label\",\n          onClick: handleIdea,\n          children: \"Need Idea?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), imageForMeme ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meme\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageForMeme,\n            alt: \"meme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"top\",\n            children: inputText.topText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"bottom\",\n            children: inputText.bottomText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"label\",\n          onClick: handleCreate,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 18\n        }, this), createMeme ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: createMeme.url,\n          alt: \"meme\",\n          style: {\n            height: \"auto\",\n            width: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"label\",\n          onClick: handleDownload,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateMeme, \"qRdJKBURMjT0jWhptVy9M1uWh68=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateMeme;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateMeme\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/CreateMeme.jsx"],"names":["ProfileContext","useContext","useEffect","useRef","useState","useHistory","CreateMemeContext","CreateMeme","createMeme","setCreateMeme","inputText","setInputText","imageForMeme","setImageForMeme","memesFromApi","setMemesFromApi","currentGeneratedMeme","setCurrentGeneratedMeme","history","idea","setIdea","fetch","then","res","json","body","data","memes","handleInputChange","e","target","name","value","console","log","topText","memesINeed","filter","meme","box_count","handleGenerate","preventDefault","randomMemeTemplate","Math","floor","random","length","randomMemeTemplateUrl","url","push","handleCreate","currentMeme","formData","FormData","append","id","bottomText","method","catch","error","handleIdea","headers","response","joke","wordsMatch","match","words","firstHalf","split","join","secondHalf","slice","handleDownload","arrayBuffer","buffer","downloadUrl","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","height","width"],"mappings":"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","sourcesContent":["import { ProfileContext } from \"../../context/ProfileContext\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateMemeContext } from \"../../context/CreateMemeContext\";\nimport \"./CreateMeme.css\";\n\nexport default function CreateMeme() {\n  const [createMeme, setCreateMeme] = useContext(CreateMemeContext);\n  const [inputText, setInputText] = useState([]);\n  const [imageForMeme, setImageForMeme] = useState();\n  const [memesFromApi, setMemesFromApi] = useState();\n  const [currentGeneratedMeme, setCurrentGeneratedMeme] = useState();\n  const history = useHistory();\n  const [idea, setIdea] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((res) => res.json())\n      .then((body) => {\n        setMemesFromApi([...body.data.memes]);\n      });\n  }, []);\n\n  const handleInputChange = (e) => {\n    setInputText({ ...inputText, [e.target.name]: e.target.value });\n    console.log(inputText.topText);\n  };\n\n  const memesINeed = memesFromApi?.filter((meme) => {\n    return meme.box_count === 2;\n  });\n\n  const handleGenerate = (e) => {\n    e.preventDefault();\n    const randomMemeTemplate = Math.floor(Math.random() * memesINeed.length);\n    setCurrentGeneratedMeme(memesINeed[randomMemeTemplate]);\n    const randomMemeTemplateUrl = memesINeed[randomMemeTemplate].url;\n    setImageForMeme(randomMemeTemplateUrl);\n    console.log(memesINeed[randomMemeTemplate].box_count);\n    history.push(`/homeview/create/${memesINeed[randomMemeTemplate].name}`);\n  };\n\n  const handleCreate = (e) => {\n    e.preventDefault();\n    const currentMeme = currentGeneratedMeme;\n    console.log(currentMeme);\n    const formData = new FormData();\n\n    formData.append(\"username\", \"ajay.gh\");\n    formData.append(\"password\", \"Dharan123\");\n    formData.append(\"template_id\", currentMeme.id);\n    formData.append(\"text0\", inputText.topText);\n    formData.append(\"text1\", inputText.bottomText);\n\n    fetch(\"https://api.imgflip.com/caption_image\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((body) => {\n        console.log(body);\n        setCreateMeme(body.data);\n      })\n      .catch((error) => console.log(\"Error:\", error));\n  };\n\n  const handleIdea = (e) => {\n    e.preventDefault();\n    fetch(\"https://jokeapi-v2.p.rapidapi.com/joke/Any?type=single\", {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"jokeapi-v2.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"285626be1emsh6252dd238a98631p1c38c5jsn328387bb55ff\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setIdea(data.joke);\n      });\n\n    const wordsMatch = idea.match(/(\\w+)/g);\n    //    \\w+    between one and unlimited word characters\n    //    /g     greedy - don't stop after the first match\n    const words = wordsMatch.length;\n    console.log(words);\n\n    if (words < 30) {\n      const firstHalf = idea.split(\" \", words / 2).join(\" \");\n      console.log(firstHalf);\n\n      const secondHalf = idea\n        .split(\" \")\n        .slice(words / 2)\n        .join(\" \");\n      console.log(secondHalf);\n\n      setInputText({ topText: firstHalf, bottomText: secondHalf });\n    }\n  };\n  const handleDownload = (e) => {\n    e.preventDefault();\n    fetch(createMeme.url, {\n      method: \"GET\",\n      headers: {},\n    }).then((res) => {\n      res\n        .arrayBuffer()\n        .then(function (buffer) {\n          const downloadUrl = window.URL.createObjectURL(new Blob([buffer]));\n          const link = document.createElement(\"a\");\n          link.href = downloadUrl;\n          link.setAttribute(\"download\", \"memeFromApi.png\" );\n          document.body.appendChild(link);\n          link.click();\n        })\n        .catch((error) => {\n          console.log(\"Error from download\", error);\n        });\n    });\n    history.push(\"/homeview/upload\")\n    setCreateMeme();\n  };\n\n  console.log(createMeme);\n  return (\n    <div className=\"container\">\n      <div className=\"create-show\">\n        <form method=\"post\" className=\"form\">\n          <label className=\"label-top\">\n            Alright, Lets Create a Meme\n            <br />\n            <br />\n            🤭\n          </label>\n          <br /> <br />\n          <button className=\"label\" onClick={handleGenerate}>\n            Generate Meme Template\n          </button>\n          <br />\n          <label forhtml=\"fullName\">Top Text: </label>\n          <br />\n          <textarea\n            type=\"text\"\n            name=\"topText\"\n            onChange={handleInputChange}\n          ></textarea>\n          <br />\n          <label forhtml=\"fullName\">Bottom Text: </label>\n          <br />\n          <textarea\n            type=\"text\"\n            name=\"bottomText\"\n            onChange={handleInputChange}\n          ></textarea>\n          <br /> <br/>\n          <label style={{}}>Click \"NEED IDEA?\" couple times to see Magic 🤭 ⬇️</label>\n          <br/>\n          <button className=\"label\" onClick={handleIdea}>\n            Need Idea?\n          </button>\n          <br/> <br/>\n          {imageForMeme ? (\n            <div className=\"meme\">\n              <img src={imageForMeme} alt=\"meme\" />\n              <h2 className=\"top\">{inputText.topText}</h2>\n              <h2 className=\"bottom\">{inputText.bottomText}</h2>\n            </div>\n          ) : null}\n          <br />\n          <button className=\"label\" onClick={handleCreate}>\n            Create\n          </button>\n          <br /> <br />\n          {createMeme ? (\n            <img\n              src={createMeme.url}\n              alt=\"meme\"\n              style={{ height: \"auto\", width: \"auto\" }}\n            />\n          ) : null}\n          <br /> <br />\n          <button className=\"label\" onClick={handleDownload}>\n            Download\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}