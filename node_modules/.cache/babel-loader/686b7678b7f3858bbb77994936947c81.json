{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemesFromFBD.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db, auth, storage } from \"../../firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, collection, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemesFromFBD() {\n  _s();\n\n  const [allUploadedMemes, SetAllUploadedMemes] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const uid = auth.currentUser.uid;\n  const memeCollectionRef = collection(db, \"users\", uid, \"memes\");\n  const userRef = collection(db, \"users\", uid);\n  useEffect(() => {\n    getAllUploadedMemes();\n    getUsername();\n  }, []);\n\n  const getAllUploadedMemes = async () => {\n    const uploadedMemes = await getDocs(memeCollectionRef);\n    SetAllUploadedMemes(uploadedMemes.docs.map(doc => ({ ...doc.data(),\n      id: doc.id\n    })));\n  };\n\n  console.log(allUploadedMemes);\n\n  const getUsername = async () => {\n    const username = await getDocs(userRef);\n    console.log(username);\n  };\n\n  const uploadedMemeToDisplay = allUploadedMemes.map(meme => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          float: \"left\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          fontStyle: \"italic\",\n          fontWeight: \"300\",\n          fontSize: \"15px\",\n          float: \"left\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"View Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          fontSize: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }); // const deleteMeme = (id) => {\n  //     const memeDoc = doc(db, \"users\", user.uid, \"memes\", id)\n  // }\n\n  return {};\n}\n\n_s(MemesFromFBD, \"bHyCe0Ne/88dsQuXHELUYgnn74s=\");\n\n_c = MemesFromFBD;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemesFromFBD\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemesFromFBD.jsx"],"names":["React","useEffect","useState","db","auth","storage","ref","uploadBytesResumable","getDownloadURL","doc","collection","getDocs","MemesFromFBD","allUploadedMemes","SetAllUploadedMemes","username","setUsername","uid","currentUser","memeCollectionRef","userRef","getAllUploadedMemes","getUsername","uploadedMemes","docs","map","data","id","console","log","uploadedMemeToDisplay","meme","float","fontStyle","fontWeight","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,EAAT,EAAaC,IAAb,EAAmBC,OAAnB,QAAkC,gBAAlC;AACA,SAASC,GAAT,EAAcC,oBAAd,EAAoCC,cAApC,QAA0D,kBAA1D;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,OAA1B,QAAyC,oBAAzC;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMe,GAAG,GAAGb,IAAI,CAACc,WAAL,CAAiBD,GAA7B;AACA,QAAME,iBAAiB,GAAGT,UAAU,CAACP,EAAD,EAAK,OAAL,EAAcc,GAAd,EAAmB,OAAnB,CAApC;AACA,QAAMG,OAAO,GAAGV,UAAU,CAACP,EAAD,EAAK,OAAL,EAAcc,GAAd,CAA1B;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,mBAAmB;AACnBC,IAAAA,WAAW;AACZ,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMD,mBAAmB,GAAG,YAAY;AACtC,UAAME,aAAa,GAAG,MAAMZ,OAAO,CAACQ,iBAAD,CAAnC;AACAL,IAAAA,mBAAmB,CAACS,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAwBhB,GAAD,KAAU,EAAC,GAAGA,GAAG,CAACiB,IAAJ,EAAJ;AAAgBC,MAAAA,EAAE,EAAElB,GAAG,CAACkB;AAAxB,KAAV,CAAvB,CAAD,CAAnB;AACD,GAHD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYhB,gBAAZ;;AAGA,QAAMS,WAAW,GAAG,YAAW;AAC3B,UAAMP,QAAQ,GAAI,MAAMJ,OAAO,CAACS,OAAD,CAA/B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AAGH,GALD;;AAMA,QAAMe,qBAAqB,GAAGjB,gBAAgB,CAACY,GAAjB,CAAsBM,IAAD,IAAU;AACzD,wBACK;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACG;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAX;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAE,QADN;AAELC,UAAAA,UAAU,EAAE,KAFP;AAGLC,UAAAA,QAAQ,EAAE,MAHL;AAILH,UAAAA,KAAK,EAAE;AAJF;AADT;AAAA;AAAA;AAAA;AAAA,cAHH,eAaG;AAAA;AAAA;AAAA;AAAA,cAbH,oBAaU;AAAA;AAAA;AAAA;AAAA,cAbV,eAeG;AAAA;AAAA;AAAA;AAAA,cAfH,oBAeU;AAAA;AAAA;AAAA;AAAA,cAfV,eAgBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBE,eAiBK;AAAO,QAAA,KAAK,EAAE;AAACG,UAAAA,QAAQ,EAAE;AAAX;AAAd;AAAA;AAAA;AAAA;AAAA,cAjBL;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAqBH,GAtB6B,CAA9B,CA1BqC,CAkDrC;AACA;AACA;;AACA,SACE,EADF;AAID;;GAzDuBvB,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { db, auth, storage } from \"../../firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, collection, getDocs } from \"firebase/firestore\";\n\nexport default function MemesFromFBD() {\n  const [allUploadedMemes, SetAllUploadedMemes] = useState([]);\n  const [username, setUsername] = useState(\"\")\n\n  const uid = auth.currentUser.uid;\n  const memeCollectionRef = collection(db, \"users\", uid, \"memes\");\n  const userRef = collection(db, \"users\", uid );\n\n  useEffect(() => {\n    getAllUploadedMemes();\n    getUsername();\n  }, []);\n\n  const getAllUploadedMemes = async () => {\n    const uploadedMemes = await getDocs(memeCollectionRef);\n    SetAllUploadedMemes(uploadedMemes.docs.map((doc) => ({...doc.data(), id: doc.id})))\n  };\n  console.log(allUploadedMemes);\n\n\n  const getUsername = async() => {\n      const username =  await getDocs(userRef);\n      console.log(username)\n      \n\n  }\n  const uploadedMemeToDisplay = allUploadedMemes.map((meme) => {\n      return (\n           <div className=\"meme-container\">\n              <h4 style={{ float: \"left\" }}>{}</h4>\n              <br />\n              <small\n                style={{\n                  fontStyle: \"italic\",\n                  fontWeight: \"300\",\n                  fontSize: \"15px\",\n                  float: \"left\",\n                }}\n              >\n                {}\n              </small>\n              <br /> <br />\n              {/* <img src=\"\" alt=\"do i care\" className=\"meme-image\" /> */}\n              <br /> <br /> \n         <button>View Comments</button>\n                <small style={{fontSize: \"10px\"}}></small> \n        </div> \n      )\n  })\n\n  // const deleteMeme = (id) => {\n  //     const memeDoc = doc(db, \"users\", user.uid, \"memes\", id)\n  // }\n  return (\n    {\n      }\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}