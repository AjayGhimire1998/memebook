{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/Upload.jsx\",\n    _s2 = $RefreshSig$();\n\nimport \"./Upload.scss\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { UploadMemeContext } from \"../../context/UploadMemeContext\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { doc, addDoc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db, auth, storage } from \"../../firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Upload(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    preview,\n    setPreview,\n    showPreview,\n    removePreview\n  } = _ref;\n  const [uploadMeme, setUploadMeme] = useContext(UploadMemeContext);\n  const [profile, setProfile] = useContext(ProfileContext);\n  const [setupShow, setSetupShow] = useState(true);\n  const [imageLoad, setImageLoad] = useState(null);\n  const history = useHistory();\n\n  const handleCaptionInput = e => {\n    setUploadMeme({ ...uploadMeme,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleUpload = async e => {\n    _s();\n\n    e.preventDefault();\n    useEffect(() => {\n      const uploadFile = () => {\n        const name = new Date().getTime() + preview.name;\n        console.log(name);\n        const storageRef = ref(storage, preview.name);\n        const uploadTask = uploadBytesResumable(storageRef, preview);\n        uploadTask.on(\"state_changed\", snapshot => {\n          const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n          console.log(\"Upload is \" + progress + \"% done\");\n          setImageLoad(progress);\n\n          switch (snapshot.state) {\n            case \"paused\":\n              console.log(\"Upload is paused\");\n              break;\n\n            case \"running\":\n              console.log(\"Upload is running\");\n              break;\n\n            default:\n              break;\n          }\n        }, error => {\n          console.log(error);\n        }, () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n            console.log(\"File available at\", downloadURL);\n            setUploadMeme({ ...uploadMeme,\n              uploadedMeme: downloadURL\n            });\n          });\n        });\n      };\n\n      preview && uploadFile();\n    }, [preview]);\n\n    try {\n      const user = auth.currentUser;\n      const memeCollectionRef = collection(db, \"users\", user.uid, \"memes\");\n      await addDoc(memeCollectionRef, {\n        caption: uploadMeme.caption,\n        uploadedMemeImage: uploadMeme.uploadedMeme\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    history.push(\"/homeview\");\n    setSetupShow(false);\n    setPreview();\n  };\n\n  _s(handleUpload, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-show\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-top\",\n          children: [\"Alright, Lets Upload a Meme\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), \"\\uD83E\\uDD2D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 18\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), preview ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(preview),\n            className: \"img\",\n            alt: \"profile-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-image\",\n            onClick: removePreview,\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Upload Progress: \", imageLoad, \" done!!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-ip\",\n          className: \"label\",\n          children: \"Choose Your Meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file-ip\",\n          accept: \"image/*\",\n          onChange: e => {\n            showPreview(e);\n            handleCaptionInput(e);\n          },\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 18\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          forhtml: \"fullName\",\n          children: \"Say Something About Your Meme: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: {\n            height: \"80px\",\n            width: \"auto\"\n          },\n          name: \"caption\",\n          onChange: handleCaptionInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-profile\",\n          onClick: handleUpload,\n          disabled: imageLoad !== null && imageLoad < 100,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Upload, \"ChOd1Sn6Wa2k/IWJiBRF46dHCGg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/Upload.jsx"],"names":["useContext","useState","useEffect","UploadMemeContext","ProfileContext","useHistory","doc","addDoc","setDoc","serverTimestamp","db","auth","storage","ref","uploadBytesResumable","getDownloadURL","collection","query","where","getDocs","Upload","preview","setPreview","showPreview","removePreview","uploadMeme","setUploadMeme","profile","setProfile","setupShow","setSetupShow","imageLoad","setImageLoad","history","handleCaptionInput","e","target","name","value","handleUpload","preventDefault","uploadFile","Date","getTime","console","log","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","state","error","then","downloadURL","uploadedMeme","user","currentUser","memeCollectionRef","uid","caption","uploadedMemeImage","push","URL","createObjectURL","height","width"],"mappings":"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","sourcesContent":["import \"./Upload.scss\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { UploadMemeContext } from \"../../context/UploadMemeContext\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { doc, addDoc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db, auth, storage } from \"../../firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\n\nexport default function Upload({\n  preview,\n  setPreview,\n  showPreview,\n  removePreview,\n}) {\n  const [uploadMeme, setUploadMeme] = useContext(UploadMemeContext);\n  const [profile, setProfile] = useContext(ProfileContext);\n  const [setupShow, setSetupShow] = useState(true);\n  const [imageLoad, setImageLoad] = useState(null);\n  const history = useHistory();\n\n  const handleCaptionInput = (e) => {\n    setUploadMeme({ ...uploadMeme, [e.target.name]: e.target.value });\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    useEffect(() => {\n      const uploadFile = () => {\n        const name = new Date().getTime() + preview.name;\n        console.log(name);\n        const storageRef = ref(storage, preview.name);\n        const uploadTask = uploadBytesResumable(storageRef, preview);\n\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {\n            const progress =\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            console.log(\"Upload is \" + progress + \"% done\");\n            setImageLoad(progress);\n            switch (snapshot.state) {\n              case \"paused\":\n                console.log(\"Upload is paused\");\n                break;\n              case \"running\":\n                console.log(\"Upload is running\");\n                break;\n              default:\n                break;\n            }\n          },\n          (error) => {\n            console.log(error);\n          },\n          () => {\n            getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n              console.log(\"File available at\", downloadURL);\n              setUploadMeme({ ...uploadMeme, uploadedMeme: downloadURL });\n            });\n          }\n        );\n      };\n      preview && uploadFile();\n    }, [preview]);\n    try {\n      const user = auth.currentUser;\n      const memeCollectionRef = collection(db, \"users\", user.uid, \"memes\");\n      await addDoc(memeCollectionRef, {\n        caption: uploadMeme.caption,\n        uploadedMemeImage: uploadMeme.uploadedMeme,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    history.push(\"/homeview\");\n    setSetupShow(false);\n    setPreview();\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"upload-show\">\n        <form method=\"post\" className=\"form\">\n          <label className=\"label-top\">\n            Alright, Lets Upload a Meme\n            <br />\n            <br />\n            🤭\n          </label>\n          <br /> <br />\n          <br /> <br /> <br />\n          <br />\n          {preview ? (\n            <div className=\"image\">\n              <img\n                src={URL.createObjectURL(preview)}\n                className=\"img\"\n                alt=\"profile-pic\"\n              />\n              <br />\n              <button className=\"remove-image\" onClick={removePreview}>\n                Remove\n              </button>\n            </div>\n          ) : null}\n          <br /> <br />\n          <small>Upload Progress: {imageLoad} done!!</small>\n          <br />\n          <label htmlFor=\"file-ip\" className=\"label\">\n            Choose Your Meme\n          </label>\n          <input\n            type=\"file\"\n            id=\"file-ip\"\n            accept=\"image/*\"\n            onChange={(e) => {\n              showPreview(e);\n              handleCaptionInput(e);\n            }}\n            hidden\n          ></input>\n          <br /> <br /> <br />\n          <label forhtml=\"fullName\">Say Something About Your Meme: </label>\n          <br /> <br />\n          <input\n            type=\"text\"\n            style={{ height: \"80px\", width: \"auto\" }}\n            name=\"caption\"\n            onChange={handleCaptionInput}\n          ></input>\n          <br /> <br />\n          <button\n            className=\"save-profile\"\n            onClick={handleUpload}\n            disabled={imageLoad !== null && imageLoad < 100}\n          >\n            Upload\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}