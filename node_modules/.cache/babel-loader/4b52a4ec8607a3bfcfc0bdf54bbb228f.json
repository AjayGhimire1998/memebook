{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/CreateMeme.jsx\",\n    _s = $RefreshSig$();\n\nimport { ProfileContext } from \"../../context/ProfileContext\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateMemeContext } from \"../../context/CreateMemeContext\";\nimport \"./CreateMeme.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateMeme() {\n  _s();\n\n  const [createMeme, setCreateMeme] = useContext(CreateMemeContext);\n  const [inputText, setInputText] = useState({});\n  const [imageForMeme, setImageForMeme] = useState();\n  const [memesFromApi, setMemesFromApi] = useState();\n  const [imageLoad, setImageLoad] = useState(null);\n  const history = useHistory(); // function SeePreview(e) {\n  //   if (e.target.files && e.target.files.length > 0) {\n  //     const src = e.target.files[0];\n  //     setImageForMeme(src);\n  //   }\n  // }\n\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(body => {\n      setMemesFromApi(body.data.memes);\n      console.log(memesFromApi.name);\n    });\n  }, []);\n  console.log(memesFromApi);\n\n  const handleGenerate = e => {\n    e.preventDefault();\n    const randomMemeTemplate = Math.floor(Math.random() * memesFromApi.length);\n    const randomMemeTemplateUrl = memesFromApi[randomMemeTemplate].url;\n    setImageForMeme(randomMemeTemplateUrl);\n    console.log(imageForMeme);\n    console.log(memesFromApi[randomMemeTemplate].box_count);\n    history.push(`/homeview/create/${memesFromApi[randomMemeTemplate].name}`);\n  };\n\n  const handleInputChange = e => {\n    setInputText({ ...inputText,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleReset = e => {\n    e.preventDefault();\n    setInputText({\n      topText: \"\",\n      bottomText: \"\"\n    });\n  }; // console.log(imageForMeme);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-show\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-top\",\n          children: [\"Alright, Lets Create a Meme\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), \"\\uD83E\\uDD2D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"label\",\n          onClick: handleGenerate,\n          children: \"Generate Meme Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          forhtml: \"fullName\",\n          children: \"Top Text: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          value: inputText.topText,\n          name: \"topText\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          forhtml: \"fullName\",\n          children: \"Bottom Text: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          value: inputText.bottomText,\n          name: \"bottomText\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), imageForMeme ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meme\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageForMeme,\n            alt: \"meme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"top\",\n            children: inputText.topText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"bottom\",\n            children: inputText.bottomText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-image\",\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-profile\" // onClick={handleUpload}\n          ,\n          disabled: imageLoad !== null && imageLoad < 100,\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateMeme, \"R01DCC5PE4SmVUE7wCqwKLyXr4k=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateMeme;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateMeme\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/CreateMeme.jsx"],"names":["ProfileContext","useContext","useEffect","useRef","useState","useHistory","CreateMemeContext","CreateMeme","createMeme","setCreateMeme","inputText","setInputText","imageForMeme","setImageForMeme","memesFromApi","setMemesFromApi","imageLoad","setImageLoad","history","fetch","then","res","json","body","data","memes","console","log","name","handleGenerate","e","preventDefault","randomMemeTemplate","Math","floor","random","length","randomMemeTemplateUrl","url","box_count","push","handleInputChange","target","value","handleReset","topText","bottomText"],"mappings":"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","sourcesContent":["import { ProfileContext } from \"../../context/ProfileContext\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateMemeContext } from \"../../context/CreateMemeContext\";\nimport \"./CreateMeme.css\";\n\nexport default function CreateMeme() {\n  const [createMeme, setCreateMeme] = useContext(CreateMemeContext);\n  const [inputText, setInputText] = useState({});\n  const [imageForMeme, setImageForMeme] = useState();\n  const [memesFromApi, setMemesFromApi] = useState();\n  const [imageLoad, setImageLoad] = useState(null);\n  const history = useHistory();\n\n  // function SeePreview(e) {\n  //   if (e.target.files && e.target.files.length > 0) {\n  //     const src = e.target.files[0];\n  //     setImageForMeme(src);\n  //   }\n  // }\n\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((res) => res.json())\n      .then((body) => {\n        \n        setMemesFromApi(body.data.memes);\n        console.log(memesFromApi.name)\n      });\n  }, []);\n\n  console.log(memesFromApi);\n\n  const handleGenerate = (e) => {\n    e.preventDefault();\n    const randomMemeTemplate = Math.floor(Math.random() * memesFromApi.length);\n    const randomMemeTemplateUrl = memesFromApi[randomMemeTemplate].url;\n    setImageForMeme(randomMemeTemplateUrl);\n    console.log(imageForMeme);\n    console.log(memesFromApi[randomMemeTemplate].box_count);\n    history.push(`/homeview/create/${memesFromApi[randomMemeTemplate].name}`);\n  };\n\n  const handleInputChange = (e) => {\n    setInputText({ ...inputText, [e.target.name]: e.target.value });\n  };\n\n  const handleReset = (e) => {\n    e.preventDefault();\n    setInputText({\n      topText: \"\",\n      bottomText: \"\",\n    });\n  };\n\n  // console.log(imageForMeme);\n  return (\n    <div className=\"container\">\n      <div className=\"create-show\">\n        <form method=\"post\" className=\"form\">\n          <label className=\"label-top\">\n            Alright, Lets Create a Meme\n            <br />\n            <br />\n            🤭\n          </label>\n          <br /> <br />\n          <button className=\"label\" onClick={handleGenerate}>\n            Generate Meme Template\n          </button>\n          <br />\n          <label forhtml=\"fullName\">Top Text: </label>\n          <br />\n          <textarea\n            type=\"text\"\n            value={inputText.topText}\n            name=\"topText\"\n            onChange={handleInputChange}\n          ></textarea>\n          <br />\n          <label forhtml=\"fullName\">Bottom Text: </label>\n          <br />\n          <textarea\n            type=\"text\"\n            value={inputText.bottomText}\n            name=\"bottomText\"\n            onChange={handleInputChange}\n          ></textarea>\n          {/* <small>Upload Progress: {imageLoad}% done!!</small> */}\n          <br />\n          {/* <input\n            name=\"creatingMeme\"\n            type=\"file\"\n            id=\"file-ip\"\n            accept=\"image/*\"\n            onChange={SeePreview}\n            hidden\n          ></input> */}\n          {/* {imageForMeme ? (\n            <div className=\"meme\">\n                <img src={URL.createObjectURL(imageForMeme)} alt=\"meme\" />\n                <h2 className=\"top\">{inputText.topText}</h2>\n                <h2 className=\"bottom\">{inputText.bottomText}</h2>\n            </div>\n          ) : null} */}\n          {imageForMeme ? (\n            <div className=\"meme\">\n              <img src={imageForMeme} alt=\"meme\" />\n              <h2 className=\"top\">{inputText.topText}</h2>\n              <h2 className=\"bottom\">{inputText.bottomText}</h2>\n            </div>\n          ) : null}\n          <br />\n          <button className=\"reset-image\" onClick={handleReset}>\n            Reset\n          </button>\n          <br /> <br />\n          <button\n            className=\"save-profile\"\n            // onClick={handleUpload}\n            disabled={imageLoad !== null && imageLoad < 100}\n          >\n            Generate\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}