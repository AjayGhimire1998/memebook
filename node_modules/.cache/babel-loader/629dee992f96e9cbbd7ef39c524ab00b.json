{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemeContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { HomePageContext } from \"../../context/HomePageContext\";\nimport \"./MemeContainer.css\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemeContainer() {\n  _s();\n\n  const [homePageData, setHomePageData] = useContext(HomePageContext);\n  const [profile, setprofile] = useContext(ProfileContext);\n  const memeToDisplay = homePageData.slice(2, 12).map((d, index) => {\n    if (d.data.post_hint === \"image\") {\n      const image_url = d.data.url_overridden_by_dest;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            float: \"left\"\n          },\n          children: [d.data.author, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            fontStyle: \"italic\",\n            fontWeight: \"300\",\n            fontSize: \"15px\",\n            float: \"left\"\n          },\n          children: d.data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image_url,\n          alt: d.data.title,\n          className: \"meme-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  const myMeme = localStorage.getItem(\"profile\", JSON.stringify(profile));\n  const parsedData = JSON.parse(myMeme);\n  const newAddedMemeData = {\n    \"parsedUsername\": parsedData.username,\n    \"parsedMemeImage\": parsedData.uploadedMeme,\n    \"parsedCaption\": parsedData.caption\n  };\n  useEffect(() => {\n    setHomePageData({ ...homePageData,\n      newAddedMemeData\n    });\n  }, [profile]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          float: \"left\"\n        },\n        children: parsedUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          fontStyle: \"italic\",\n          fontWeight: \"300\",\n          fontSize: \"15px\",\n          float: \"left\"\n        },\n        children: parsedCaption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: parsedMemeImage,\n        alt: \"do i care\",\n        className: \"meme-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), memeToDisplay]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MemeContainer, \"m1ry/k4Pa37eCxHPptSszxLduzU=\");\n\n_c = MemeContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemeContainer\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemeContainer.jsx"],"names":["React","useContext","useEffect","HomePageContext","ProfileContext","MemeContainer","homePageData","setHomePageData","profile","setprofile","memeToDisplay","slice","map","d","index","data","post_hint","image_url","url_overridden_by_dest","float","author","fontStyle","fontWeight","fontSize","title","myMeme","localStorage","getItem","JSON","stringify","parsedData","parse","newAddedMemeData","username","uploadedMeme","caption","parsedUsername","parsedCaption","parsedMemeImage"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { HomePageContext } from \"../../context/HomePageContext\";\nimport \"./MemeContainer.css\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\n\nexport default function MemeContainer() {\n  const [homePageData, setHomePageData] = useContext(HomePageContext);\n  const [profile, setprofile] = useContext(ProfileContext);\n  const memeToDisplay = homePageData.slice(2, 12).map((d, index) => {\n    if (d.data.post_hint === \"image\") {\n      const image_url = d.data.url_overridden_by_dest;\n      return (\n        <div className=\"meme-container\" key={index}>\n          <h4 style={{ float: \"left\" }}>{d.data.author}:</h4>\n          <br />\n          <small\n            style={{\n              fontStyle: \"italic\",\n              fontWeight: \"300\",\n              fontSize: \"15px\",\n              float: \"left\",\n            }}\n          >\n            {d.data.title}\n          </small>\n          <br /> <br />\n          <img src={image_url} alt={d.data.title} className=\"meme-image\" />\n          <br /> <br />\n          {/* <button>View Comments</button>\n          <small style={{fontSize: \"10px\"}}></small> */}\n        </div>\n      );\n    }\n  });\n\n  const myMeme = localStorage.getItem(\"profile\", JSON.stringify(profile));\n  const parsedData = JSON.parse(myMeme);\n  const newAddedMemeData = {\n    \"parsedUsername\": parsedData.username,\n    \"parsedMemeImage\": parsedData.uploadedMeme,\n    \"parsedCaption\": parsedData.caption\n  }\n\n  useEffect(() => {\n    setHomePageData({...homePageData, newAddedMemeData})\n\n  },[profile]);\n\n  return (\n    <div>\n      <div className=\"meme-container\">\n        <h4 style={{ float: \"left\" }}>{parsedUsername}</h4>\n        <br />\n        <small\n          style={{\n            fontStyle: \"italic\",\n            fontWeight: \"300\",\n            fontSize: \"15px\",\n            float: \"left\",\n          }}\n        >\n          {parsedCaption}\n        </small>\n        <br /> <br />\n        <img src={parsedMemeImage} alt=\"do i care\" className=\"meme-image\" />\n        <br /> <br />\n        {/* <button>View Comments</button>\n          <small style={{fontSize: \"10px\"}}></small> */}\n      </div>\n      {memeToDisplay}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}