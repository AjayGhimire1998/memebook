{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useHistory, NavLink } from \"react-router-dom\";\nimport React, { useState, useContext } from \"react\";\nimport \"./Login.scss\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emptyEmailError, setEmptyEmailError] = useState(\"\");\n  const [emptyPasswordError, setEmptyPasswordError] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [currentUser, setCurrentUser] = useContext(AuthContext);\n  const history = useHistory();\n\n  function tooglePassword() {\n    setShowPassword(!showPassword);\n  }\n\n  const emailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const passwordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const validateEmailInput = () => {\n    if (email.length === 0) {\n      setEmptyEmailError(\"Email must not be empty!\");\n    } else {\n      setEmptyEmailError(\"\");\n    }\n  };\n\n  const validatePasswordInput = () => {\n    if (password.length === 0) {\n      setEmptyPasswordError(\"Password must not be empty!\");\n    } else {\n      setEmptyPasswordError(\"\");\n    }\n  };\n\n  const handleLogin = e => {\n    e.preventDefault();\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      // Signed in\n      const user = userCredential.user;\n      console.log(user);\n      setCurrentUser(user.email);\n      history.push(\"/homeview\");\n    }).catch(error => {\n      setError(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/homeview\",\n      className: \"meme-book\",\n      children: [\"Meme \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"black\",\n          fontSize: \"50px\",\n          textShadow: \"0 0 2px white\"\n        },\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            fontSize: \"35px\",\n            fontWeight: \"800\",\n            fontFamily: \"Copperplate, Copperplate Gothic Light,fantasy\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"first-name\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            onChange: e => {\n              emailChange(e);\n              validateEmailInput();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: \"red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: emptyEmailError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"first-name\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? \"text\" : \"password\",\n            onChange: e => {\n              passwordChange(e);\n              validatePasswordInput();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: tooglePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [showPassword ? \" Hide \" : \" Show \", \" Password\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: \"red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: emptyPasswordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"By clicking the \\\"Log In\\\" button below, you will be directed to the actual app\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 18\n        }, this), error && /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Wrong Email or Password !!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"landing-signup\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button\",\n            onClick: handleLogin,\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"nR6dMMeZnFnlykuRWFPzXz8j7T4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/Login.jsx"],"names":["useHistory","NavLink","React","useState","useContext","signInWithEmailAndPassword","auth","AuthContext","Login","error","setError","email","setEmail","password","setPassword","emptyEmailError","setEmptyEmailError","emptyPasswordError","setEmptyPasswordError","showPassword","setShowPassword","currentUser","setCurrentUser","history","tooglePassword","emailChange","e","target","value","passwordChange","validateEmailInput","length","validatePasswordInput","handleLogin","preventDefault","then","userCredential","user","console","log","push","catch","color","fontSize","textShadow","textAlign","fontWeight","fontFamily"],"mappings":"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","sourcesContent":["import { useHistory, NavLink } from \"react-router-dom\";\nimport React, { useState, useContext } from \"react\";\nimport \"./Login.scss\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nexport default function Login() {\n  const [error, setError] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emptyEmailError, setEmptyEmailError] = useState(\"\");\n  const [emptyPasswordError, setEmptyPasswordError] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [currentUser, setCurrentUser] = useContext(AuthContext);\n\n  const history = useHistory();\n\n  function tooglePassword() {\n    setShowPassword(!showPassword);\n  }\n\n  const emailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const passwordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const validateEmailInput = () => {\n    if (email.length === 0) {\n      setEmptyEmailError(\"Email must not be empty!\");\n    } else {\n      setEmptyEmailError(\"\");\n    }\n  };\n\n  const validatePasswordInput = () => {\n    if (password.length === 0) {\n      setEmptyPasswordError(\"Password must not be empty!\");\n    } else {\n      setEmptyPasswordError(\"\");\n    }\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user;\n        console.log(user);\n        setCurrentUser(user.email);\n        history.push(\"/homeview\");\n      })\n      .catch((error) => {\n        setError(true);\n      });\n  };\n  return (\n    <div>\n      <NavLink to=\"/homeview\" className=\"meme-book\">\n        Meme <br />\n        <span\n          style={{\n            color: \"black\",\n            fontSize: \"50px\",\n            textShadow: \"0 0 2px white\",\n          }}\n        >\n          Book\n        </span>\n      </NavLink>\n      <div className=\"login\">\n        <form>\n          <div\n            style={{\n              textAlign: \"center\",\n              fontSize: \"35px\",\n              fontWeight: \"800\",\n              fontFamily: \"Copperplate, Copperplate Gothic Light,fantasy\",\n            }}\n          >\n            <label>Log In</label>\n          </div>\n          <div>\n            <br />\n            <label htmlFor=\"first-name\">Email: </label>\n            <input\n              type=\"email\"\n              onChange={(e) => {\n                emailChange(e);\n                validateEmailInput();\n              }}\n            />\n          </div>\n          <br />\n          <small style={{ color: \"red\" }}>\n            <i>{emptyEmailError}</i>\n          </small>\n          <div>\n            <br />\n            <label htmlFor=\"first-name\">Password: </label>\n            <input\n              type={showPassword ? \"text\" : \"password\"}\n              onChange={(e) => {\n                passwordChange(e);\n                validatePasswordInput();\n              }}\n            />\n          </div>\n          <input type=\"checkbox\" onClick={tooglePassword} />\n          <small>{showPassword ? \" Hide \" : \" Show \"} Password</small>\n          <br />\n          <br />\n          <small style={{ color: \"red\" }}>\n            <i>{emptyPasswordError}</i>\n          </small>\n          <br /> <br />\n          <small>\n            <i>\n              By clicking the \"Log In\" button below, you will be directed to the\n              actual app\n            </i>\n          </small>\n          <br /> <br />\n          {error && (\n            <small style={{ color: \"red\" }}>Wrong Email or Password !!</small>\n          )}\n          <br /> <br />\n          <div className=\"landing-signup\">\n            <button className=\"login-button\" onClick={handleLogin}>\n              Log In\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}