{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemesFromFBD.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db, auth, storage } from \"../../firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, collection, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemesFromFBD() {\n  _s();\n\n  const [allUploadedMemes, SetAllUploadedMemes] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState();\n\n  const onAuthStateChanged = user => {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  };\n\n  const authUser = auth.onAuthStateChanged(onAuthStateChanged).currentUser.uid;\n  const memeCollectionRef = collection(db, \"users\", user.uid, \"memes\");\n  useEffect(() => {\n    getAllUploadedMemes();\n  }, []);\n\n  const getAllUploadedMemes = async () => {\n    const uploadedMemes = await getDocs(memeCollectionRef);\n    SetAllUploadedMemes(uploadedMemes.docs.map(doc => ({ ...doc.data(),\n      id: doc.id\n    })));\n  };\n\n  console.log(allUploadedMemes);\n  const uploadedMemeToDisplay = allUploadedMemes.map(meme => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          float: \"left\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          fontStyle: \"italic\",\n          fontWeight: \"300\",\n          fontSize: \"15px\",\n          float: \"left\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"View Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          fontSize: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }); // const deleteMeme = (id) => {\n  //     const memeDoc = doc(db, \"users\", user.uid, \"memes\", id)\n  // }\n\n  return {};\n}\n\n_s(MemesFromFBD, \"PyVAjBhZIpubfoZo7Sx7DMM+LAA=\");\n\n_c = MemesFromFBD;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemesFromFBD\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemesFromFBD.jsx"],"names":["React","useEffect","useState","db","auth","storage","ref","uploadBytesResumable","getDownloadURL","doc","collection","getDocs","MemesFromFBD","allUploadedMemes","SetAllUploadedMemes","username","setUsername","initializing","setInitializing","user","setUser","onAuthStateChanged","authUser","currentUser","uid","memeCollectionRef","getAllUploadedMemes","uploadedMemes","docs","map","data","id","console","log","uploadedMemeToDisplay","meme","float","fontStyle","fontWeight","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,EAAT,EAAaC,IAAb,EAAmBC,OAAnB,QAAkC,gBAAlC;AACA,SAASC,GAAT,EAAcC,oBAAd,EAAoCC,cAApC,QAA0D,kBAA1D;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,OAA1B,QAAyC,oBAAzC;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,EAAhC;;AAEA,QAAMmB,kBAAkB,GAAIF,IAAD,IAAU;AACnCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACA,QAAIF,YAAJ,EAAkBC,eAAe,CAAC,KAAD,CAAf;AACnB,GAHD;;AAKA,QAAMI,QAAQ,GAAGlB,IAAI,CAACiB,kBAAL,CAAwBA,kBAAxB,EAA4CE,WAA5C,CAAwDC,GAAzE;AACA,QAAMC,iBAAiB,GAAGf,UAAU,CAACP,EAAD,EAAK,OAAL,EAAcgB,IAAI,CAACK,GAAnB,EAAwB,OAAxB,CAApC;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,mBAAmB,GAAG,YAAY;AACtC,UAAMC,aAAa,GAAG,MAAMhB,OAAO,CAACc,iBAAD,CAAnC;AACAX,IAAAA,mBAAmB,CACjBa,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAwBpB,GAAD,KAAU,EAAE,GAAGA,GAAG,CAACqB,IAAJ,EAAL;AAAiBC,MAAAA,EAAE,EAAEtB,GAAG,CAACsB;AAAzB,KAAV,CAAvB,CADiB,CAAnB;AAGD,GALD;;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYpB,gBAAZ;AAEA,QAAMqB,qBAAqB,GAAGrB,gBAAgB,CAACgB,GAAjB,CAAsBM,IAAD,IAAU;AAC3D,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAE,QADN;AAELC,UAAAA,UAAU,EAAE,KAFP;AAGLC,UAAAA,QAAQ,EAAE,MAHL;AAILH,UAAAA,KAAK,EAAE;AAJF;AADT;AAAA;AAAA;AAAA;AAAA,cAHF,eAaE;AAAA;AAAA;AAAA;AAAA,cAbF,oBAaS;AAAA;AAAA;AAAA;AAAA,cAbT,eAeE;AAAA;AAAA;AAAA;AAAA,cAfF,oBAeS;AAAA;AAAA;AAAA;AAAA,cAfT,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE;AAAO,QAAA,KAAK,EAAE;AAAEG,UAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD,GAtB6B,CAA9B,CA1BqC,CAkDrC;AACA;AACA;;AACA,SAAO,EAAP;AACD;;GAtDuB3B,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { db, auth, storage } from \"../../firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, collection, getDocs } from \"firebase/firestore\";\n\nexport default function MemesFromFBD() {\n  const [allUploadedMemes, SetAllUploadedMemes] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [initializing, setInitializing] = useState(true)\n  const [user, setUser] = useState()\n\n  const onAuthStateChanged = (user) => {\n    setUser(user)\n    if (initializing) setInitializing(false)\n  }\n\n  const authUser = auth.onAuthStateChanged(onAuthStateChanged).currentUser.uid;\n  const memeCollectionRef = collection(db, \"users\", user.uid, \"memes\");\n\n  useEffect(() => {\n    getAllUploadedMemes();\n  }, []);\n\n  const getAllUploadedMemes = async () => {\n    const uploadedMemes = await getDocs(memeCollectionRef);\n    SetAllUploadedMemes(\n      uploadedMemes.docs.map((doc) => ({ ...doc.data(), id: doc.id }))\n    );\n  };\n  console.log(allUploadedMemes);\n\n  const uploadedMemeToDisplay = allUploadedMemes.map((meme) => {\n    return (\n      <div className=\"meme-container\">\n        <h4 style={{ float: \"left\" }}>{}</h4>\n        <br />\n        <small\n          style={{\n            fontStyle: \"italic\",\n            fontWeight: \"300\",\n            fontSize: \"15px\",\n            float: \"left\",\n          }}\n        >\n          {}\n        </small>\n        <br /> <br />\n        {/* <img src=\"\" alt=\"do i care\" className=\"meme-image\" /> */}\n        <br /> <br />\n        <button>View Comments</button>\n        <small style={{ fontSize: \"10px\" }}></small>\n      </div>\n    );\n  });\n\n  // const deleteMeme = (id) => {\n  //     const memeDoc = doc(db, \"users\", user.uid, \"memes\", id)\n  // }\n  return {};\n}\n"]},"metadata":{},"sourceType":"module"}