{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemesFromFBD.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { db, auth } from \"../../firebase\";\nimport { doc, collection, getDocs, deleteDoc } from \"firebase/firestore\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemesFromFBD() {\n  _s();\n\n  const [allUploadedMemes, SetAllUploadedMemes] = useState([]);\n  const [profile, setProfile] = useContext(ProfileContext);\n  const user = auth.currentUser;\n  const memeCollectionRef = collection(db, \"users\", user.uid, \"memes\");\n  useEffect(() => {\n    getAllUploadedMemes();\n  }, []);\n\n  const getAllUploadedMemes = async () => {\n    const uploadedMemes = await getDocs(memeCollectionRef);\n    SetAllUploadedMemes(uploadedMemes.docs.map(doc => ({ ...doc.data(),\n      id: doc.id\n    })));\n  };\n\n  const deleteMeme = id => {\n    const memeDoc = doc(db, \"users\", user.uid, \"memes\", id);\n    return deleteDoc(memeDoc);\n  };\n\n  const handleDelete = async id => {\n    await deleteMeme(id);\n    getAllUploadedMemes();\n  };\n\n  const userName = localStorage.getItem(\"profile\", JSON.stringify(profile));\n  const parsedUserName = JSON.parse(userName);\n  const uploadedMemeToDisplay = allUploadedMemes.map((meme, index) => {\n    const meme_url = meme.uploadedMemeImage;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          float: \"left\"\n        },\n        children: parsedUserName === null || parsedUserName === void 0 ? void 0 : parsedUserName.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          fontStyle: \"italic\",\n          fontWeight: \"300\",\n          fontSize: \"15px\",\n          float: \"left\"\n        },\n        children: meme.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme_url,\n        alt: meme.caption,\n        className: \"meme-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"red\"\n        },\n        onClick: e => handleDelete(meme.id),\n        children: \"\\uD83D\\uDDD1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, index + 1, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: uploadedMemeToDisplay\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n}\n\n_s(MemesFromFBD, \"O3kYCwfsbPerFAPPZJlxm97qG34=\");\n\n_c = MemesFromFBD;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemesFromFBD\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemesFromFBD.jsx"],"names":["React","useContext","useEffect","useState","db","auth","doc","collection","getDocs","deleteDoc","ProfileContext","MemesFromFBD","allUploadedMemes","SetAllUploadedMemes","profile","setProfile","user","currentUser","memeCollectionRef","uid","getAllUploadedMemes","uploadedMemes","docs","map","data","id","deleteMeme","memeDoc","handleDelete","userName","localStorage","getItem","JSON","stringify","parsedUserName","parse","uploadedMemeToDisplay","meme","index","meme_url","uploadedMemeImage","float","username","fontStyle","fontWeight","fontSize","caption","backgroundColor","e"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { db, auth } from \"../../firebase\";\nimport { doc, collection, getDocs, deleteDoc } from \"firebase/firestore\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\n\nexport default function MemesFromFBD() {\n  const [allUploadedMemes, SetAllUploadedMemes] = useState([]);\n  const [profile, setProfile] = useContext(ProfileContext);\n\n  const user = auth.currentUser;\n  const memeCollectionRef = collection(db, \"users\", user.uid, \"memes\");\n\n  useEffect(() => {\n    getAllUploadedMemes();\n  }, []);\n\n  const getAllUploadedMemes = async () => {\n    const uploadedMemes = await getDocs(memeCollectionRef);\n    SetAllUploadedMemes(\n      uploadedMemes.docs.map((doc) => ({ ...doc.data(), id: doc.id }))\n    );\n  };\n\n  const deleteMeme = (id) => {\n    const memeDoc = doc(db, \"users\", user.uid, \"memes\", id );\n    return deleteDoc(memeDoc);\n  };\n\n  const handleDelete = async(id) => {\n      await deleteMeme(id);\n      getAllUploadedMemes();\n  }\n\n  const userName = localStorage.getItem(\"profile\", JSON.stringify(profile));\n  const parsedUserName = JSON.parse(userName);\n\n  const uploadedMemeToDisplay = allUploadedMemes.map((meme, index) => {\n    const meme_url = meme.uploadedMemeImage;\n    return (\n      <div className=\"meme-container\" key={index + 1}>\n        <h4 style={{ float: \"left\" }}>{parsedUserName?.username}</h4>\n        <br />\n        <small\n          style={{\n            fontStyle: \"italic\",\n            fontWeight: \"300\",\n            fontSize: \"15px\",\n            float: \"left\",\n          }}\n        >\n          {meme.caption}\n        </small>\n        <br /> <br />\n        <img src={meme_url} alt={meme.caption} className=\"meme-image\" />\n        <br /> <br />\n        <button style={{backgroundColor: \"red\"}} onClick={(e) => handleDelete(meme.id)}>ðŸ—‘</button>\n      </div>\n    );\n  });\n\n  return <div>{uploadedMemeToDisplay}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}