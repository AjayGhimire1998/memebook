{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n\n  let [signUpData, setSignUpData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n    username: \"\"\n  });\n  const [emailIsValid, setEmailIsValid] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [authData, setAuthData] = useState([]);\n  const [passwordTaken, setPasswordTaken] = useState(false);\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState(false);\n  const [passwordIsValidError, setPasswordIsValidError] = useState(\"\");\n  const [requireTextField, setRequireTextField] = useState(false);\n  const [requiredError, setRequiredError] = useState(\"\");\n  const [loadingSpin, setLoadingSpin] = useState(false);\n\n  function validateEmail(e) {\n    const email = e.target.value;\n    const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n    if (regex.test(email)) {\n      setEmailIsValid(true);\n      setError(\"Your email is valid\");\n    } else {\n      setEmailIsValid(false);\n      setError(\"Your email is not valid.\");\n    }\n  }\n\n  function tooglePassword() {\n    setShowPassword(!showPassword);\n  }\n\n  function toogleConfirmPass() {\n    setShowConfirmPass(!showConfirmPass);\n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:4000/memebook\").then(res => res.json()).then(data => {\n      console.log(data);\n      setAuthData([...data]);\n    });\n  }, []);\n\n  function passwordCheck(authData, e) {\n    const password = e.target.value;\n    authData.map(d => {\n      if (password === d.password) {\n        setPasswordTaken(true);\n        setPasswordError(\"This Password is already taken!\");\n      } else if (password.length < 8) {\n        setPasswordTaken(false);\n        setPasswordError(\"\");\n      }\n    });\n  }\n\n  function validatePassword(e) {\n    const passWord = e.target.value;\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/;\n\n    if (passwordRegex.test(passWord)) {\n      setPasswordIsValid(true);\n      setPasswordIsValidError(\"Password is Valid!\");\n    } else {\n      setPasswordIsValid(false);\n      setPasswordIsValidError(\"Password must be 8-30 characters long and must have at least one Number, Uppercase, Lowercase and a Special character!\");\n    }\n  }\n\n  function requiredField(e) {\n    if (e.target.value.length === 0) {\n      setRequireTextField(true);\n      setRequiredError(\"*required\");\n    } else {\n      setRequireTextField(false);\n      setRequiredError(\"\");\n    }\n  }\n\n  function handleInput(e) {\n    setSignUpData({ ...signUpData,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoadingSpin(true);\n    }, 2000);\n    return clearTimeout();\n  });\n\n  function handleSignUpClick() {\n    fetch(\"http://localhost:4000/memebook\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        firstname: signUpData.firstname,\n        lastname: signUpData.lastname,\n        email: signUpData.email,\n        password: signUpData.password,\n        username: signUpData.username\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"35px\",\n          fontWeight: \"800\",\n          fontFamily: \"Copperplate, Copperplate Gothic Light,fantasy\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"first-name\",\n          children: \"First Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            handleInput(e);\n            requiredField(e);\n          },\n          name: \"firstname\",\n          className: requireTextField ? \"required-text\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: requiredError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"last-name\",\n          children: \"Last Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastname\",\n          className: requireTextField ? \"required-text\" : \"\",\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: e => {\n            handleInput(e);\n            validateEmail(e);\n            requiredField(e);\n          },\n          className: requireTextField ? \"required-text\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? \"text\" : \"password\",\n          name: \"password\",\n          onChange: e => {\n            handleInput(e);\n            passwordCheck(authData, e);\n            validatePassword(e);\n          },\n          className: passwordIsValid ? \"\" : \"required-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: tooglePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [showPassword ? \" Hide \" : \" Show \", \" Password\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: passwordIsValidError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm-password\",\n          children: \"Confirm Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: showConfirmPass ? \"text\" : \"password\",\n          name: \"password\",\n          onChange: e => {\n            handleInput(e);\n            requiredField(e);\n          },\n          className: requireTextField ? \"required-text\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: toogleConfirmPass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [showConfirmPass ? \" Hide \" : \" Show \", \" Password\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Set UserName: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          onChange: e => {\n            handleInput(e);\n            requiredField(e);\n          },\n          className: requireTextField ? \"required-text\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"By clicking the \\\"SignUp\\\" button below, you agree to all terms and conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"landing-signup\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"signup-button\",\n          onClick: handleSignUpClick,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spin\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: loadingSpin ? \"dot-spin\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"KjfAEvW9VLwlMgsdZVKAf5a4cSE=\");\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/SignUp.jsx"],"names":["React","useEffect","useState","Link","SignUp","signUpData","setSignUpData","firstname","lastname","email","password","username","emailIsValid","setEmailIsValid","error","setError","showPassword","setShowPassword","showConfirmPass","setShowConfirmPass","authData","setAuthData","passwordTaken","setPasswordTaken","passwordError","setPasswordError","passwordIsValid","setPasswordIsValid","passwordIsValidError","setPasswordIsValidError","requireTextField","setRequireTextField","requiredError","setRequiredError","loadingSpin","setLoadingSpin","validateEmail","e","target","value","regex","test","tooglePassword","toogleConfirmPass","fetch","then","res","json","data","console","log","passwordCheck","map","d","length","validatePassword","passWord","passwordRegex","requiredField","handleInput","name","setTimeout","clearTimeout","handleSignUpClick","method","headers","body","JSON","stringify","textAlign","fontSize","fontWeight","fontFamily"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SignUp() {\n  let [signUpData, setSignUpData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n    username: \"\",\n  });\n  const [emailIsValid, setEmailIsValid] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [authData, setAuthData] = useState([]);\n  const [passwordTaken, setPasswordTaken] = useState(false);\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState(false);\n  const [passwordIsValidError, setPasswordIsValidError] = useState(\"\");\n  const [requireTextField, setRequireTextField] = useState(false);\n  const [requiredError, setRequiredError] = useState(\"\");\n  const [loadingSpin, setLoadingSpin] = useState(false)\n\n  function validateEmail(e) {\n    const email = e.target.value;\n    const regex =\n      /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    if (regex.test(email)) {\n      setEmailIsValid(true);\n      setError(\"Your email is valid\");\n    } else {\n      setEmailIsValid(false);\n      setError(\"Your email is not valid.\");\n    }\n  }\n\n  function tooglePassword() {\n    setShowPassword(!showPassword);\n  }\n  function toogleConfirmPass() {\n    setShowConfirmPass(!showConfirmPass);\n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:4000/memebook\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setAuthData([...data]);\n      });\n  }, []);\n\n  function passwordCheck(authData, e) {\n    const password = e.target.value;\n    authData.map((d) => {\n      if (password === d.password) {\n        setPasswordTaken(true);\n        setPasswordError(\"This Password is already taken!\");\n      } else if (password.length < 8) {\n        setPasswordTaken(false);\n        setPasswordError(\"\");\n      }\n    });\n  }\n\n  function validatePassword(e) {\n    const passWord = e.target.value;\n    const passwordRegex =\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/;\n    if (passwordRegex.test(passWord)) {\n      setPasswordIsValid(true);\n      setPasswordIsValidError(\"Password is Valid!\");\n    } else {\n      setPasswordIsValid(false);\n      setPasswordIsValidError(\n        \"Password must be 8-30 characters long and must have at least one Number, Uppercase, Lowercase and a Special character!\"\n      );\n    }\n  }\n\n  function requiredField(e) {\n    if (e.target.value.length === 0) {\n      setRequireTextField(true);\n      setRequiredError(\"*required\");\n    } else {\n      setRequireTextField(false);\n      setRequiredError(\"\");\n    }\n  }\n\n  function handleInput(e) {\n    setSignUpData({ ...signUpData, [e.target.name]: e.target.value });\n  }\n\n  useEffect (() => {\n    setTimeout (() => {\n      setLoadingSpin(true)\n    }, 2000)\n    return clearTimeout();\n  })\n\n  function handleSignUpClick() {\n\n    fetch(\"http://localhost:4000/memebook\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        firstname: signUpData.firstname,\n        lastname: signUpData.lastname,\n        email: signUpData.email,\n        password: signUpData.password,\n        username: signUpData.username,\n      }),\n    });\n  }\n\n  return (\n    <div className=\"sign-up-form\">\n      <form>\n        <div\n          style={{\n            textAlign: \"center\",\n            fontSize: \"35px\",\n            fontWeight: \"800\",\n            fontFamily: \"Copperplate, Copperplate Gothic Light,fantasy\",\n          }}\n        >\n          <label>Sign Up</label>\n        </div>\n        <div>\n          <br />\n          <label htmlFor=\"first-name\">First Name: </label>\n          <input\n            type=\"text\"\n            onChange={(e) => {\n              handleInput(e);\n              requiredField(e);\n            }}\n            name=\"firstname\"\n            className={requireTextField ? \"required-text\" : \"\"}\n          />\n          <br />\n          <small>\n            <i>{requiredError}</i>\n          </small>\n        </div>\n        <div>\n          <br />\n          <label htmlFor=\"last-name\">Last Name: </label>\n          <input\n            type=\"text\"\n            name=\"lastname\"\n            className={requireTextField ? \"required-text\" : \"\"}\n            onChange={handleInput}\n          />\n        </div>\n        <div>\n          <br />\n          <label htmlFor=\"email\">Email: </label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={(e) => {\n              handleInput(e);\n              validateEmail(e);\n              requiredField(e);\n            }}\n            className={requireTextField ? \"required-text\" : \"\"}\n          />\n          <br />\n          <small>\n            <i>{error}</i>\n          </small>\n        </div>\n        <div>\n          <br />\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type={showPassword ? \"text\" : \"password\"}\n            name=\"password\"\n            onChange={(e) => {\n              handleInput(e);\n              passwordCheck(authData, e);\n              validatePassword(e);\n            }}\n            className={passwordIsValid ? \"\" : \"required-text\"}\n          />\n          <br />\n          <input type=\"checkbox\" onClick={tooglePassword} />\n          <small>{showPassword ? \" Hide \" : \" Show \"} Password</small>\n          <br />\n          <small>\n            <i>{passwordError}</i>\n          </small>\n          <br />\n          <br />\n          <small>\n            <i>{passwordIsValidError}</i>\n          </small>\n        </div>\n        <div>\n          <br />\n          <label htmlFor=\"confirm-password\">Confirm Password: </label>\n          <input\n            type={showConfirmPass ? \"text\" : \"password\"}\n            name=\"password\"\n            onChange={(e) => {\n              handleInput(e);\n              requiredField(e);\n            }}\n            className={requireTextField ? \"required-text\" : \"\"}\n          />\n          <br />\n          <input type=\"checkbox\" onClick={toogleConfirmPass} />\n          <small>{showConfirmPass ? \" Hide \" : \" Show \"} Password</small>\n        </div>\n        <div>\n          <br />\n          <label htmlFor=\"username\">Set UserName: </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            onChange={(e) => {\n              handleInput(e);\n              requiredField(e);\n            }}\n            className={requireTextField ? \"required-text\" : \"\"}\n          />\n        </div>\n        <br /> <br />\n        <small>\n          <i>\n            By clicking the \"SignUp\" button below, you agree to all terms and\n            conditions\n          </i>\n        </small>\n        <br /> <br />\n        <div className=\"landing-signup\">\n          <Link\n            to=\"/login\"\n            className=\"signup-button\"\n            onClick={handleSignUpClick}\n          >\n            Sign Up\n          </Link>\n        </div>\n      </form>\n      <div className=\"loading-spin\">\n            <div className={loadingSpin ? \"dot-spin\" : \"\"}></div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}