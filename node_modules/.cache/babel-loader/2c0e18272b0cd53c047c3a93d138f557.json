{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/HomePageContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePageContext = /*#__PURE__*/createContext();\n\nfunction HomePageContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [homePageData, setHomePageData] = useState([]); // const [loader, setLoader] = useState(true);\n\n  const [newMeme, setNewMeme] = useState(\"\");\n  useEffect(() => {\n    fetch(`https://www.reddit.com/r/memes.json?after=${newMeme}`).then(res => res.json()).then(body => {\n      setHomePageData(body.data.children);\n      ;\n    });\n  }, [newMeme]);\n  return /*#__PURE__*/_jsxDEV(HomePageContext.Provider, {\n    value: [homePageData, setHomePageData, newMeme, setNewMeme],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePageContextProvider, \"PPE4MyOZ0bFrhOB9KQw3yfzFtUw=\");\n\n_c = HomePageContextProvider;\nexport { HomePageContext, HomePageContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePageContextProvider\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/context/HomePageContext.jsx"],"names":["createContext","useContext","useEffect","useState","HomePageContext","HomePageContextProvider","children","homePageData","setHomePageData","newMeme","setNewMeme","fetch","then","res","json","body","data"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;;AAGA,MAAMC,eAAe,gBAAGJ,aAAa,EAArC;;AAEA,SAASK,uBAAT,OAA+C;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC7C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD,CAD6C,CAE7C;;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAE,6CAA4CF,OAAQ,EAAtD,CAAL,CACGG,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdP,MAAAA,eAAe,CAACO,IAAI,CAACC,IAAL,CAAUV,QAAX,CAAf;AACA;AACD,KALH;AAMD,GAPQ,EAOP,CAACG,OAAD,CAPO,CAAT;AAQA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE,CAACF,YAAD,EAAeC,eAAf,EAAgCC,OAAhC,EAAyCC,UAAzC,CAAjC;AAAA,cACGJ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApBQD,uB;;KAAAA,uB;AAsBT,SAASD,eAAT,EAA0BC,uBAA1B","sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\n\n\nconst HomePageContext = createContext();\n\nfunction HomePageContextProvider({ children }) {\n  const [homePageData, setHomePageData] = useState([]);\n  // const [loader, setLoader] = useState(true);\n  const [newMeme, setNewMeme] = useState(\"\")\n\n\n\n  useEffect(() => {\n    fetch(`https://www.reddit.com/r/memes.json?after=${newMeme}`)\n      .then((res) => res.json())\n      .then((body) => {\n        setHomePageData(body.data.children);\n        ;\n      });\n  },[newMeme]);\n  return (\n    <HomePageContext.Provider value={[homePageData, setHomePageData, newMeme, setNewMeme]}>\n      {children}\n    </HomePageContext.Provider>\n  );\n}\n\nexport { HomePageContext, HomePageContextProvider };\n"]},"metadata":{},"sourceType":"module"}