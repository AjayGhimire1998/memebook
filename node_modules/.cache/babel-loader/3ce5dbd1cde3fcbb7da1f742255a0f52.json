{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db, auth, storage } from \"../../firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, collection, getDocs } from \"firebase/firestore\";\nexport default function MemesFromFBD() {\n  _s();\n\n  const [allUploadedMemes, SetAllUploadedMemes] = useState([]); //   const [username, setUsername] = useState(\"\");\n\n  const user = auth.currentUser;\n  const memeCollectionRef = collection(db, \"users\", user.uid, \"memes\");\n  useEffect(() => {\n    getAllUploadedMemes();\n  }, []);\n\n  const getAllUploadedMemes = async () => {\n    const uploadedMemes = await getDocs(memeCollectionRef);\n    SetAllUploadedMemes([uploadedMemes.docs.map(doc => ({ ...doc.data(),\n      id: doc.id\n    }))]);\n  };\n\n  console.log(allUploadedMemes.caption); //   const uploadedMemeToDisplay = allUploadedMemes.map((meme) => {\n  //     return (\n  //       <div className=\"meme-container\">\n  //         <h4 style={{ float: \"left\" }}>{}</h4>\n  //         <br />\n  //         <small\n  //           style={{\n  //             fontStyle: \"italic\",\n  //             fontWeight: \"300\",\n  //             fontSize: \"15px\",\n  //             float: \"left\",\n  //           }}\n  //         >\n  //           {}\n  //         </small>\n  //         <br /> <br />\n  //         {/* <img src=\"\" alt=\"do i care\" className=\"meme-image\" /> */}\n  //         <br /> <br />\n  //         <button>View Comments</button>\n  //         <small style={{ fontSize: \"10px\" }}></small>\n  //       </div>\n  //     );\n  //   });\n  // const deleteMeme = (id) => {\n  //     const memeDoc = doc(db, \"users\", user.uid, \"memes\", id)\n  // }\n\n  return;\n}\n\n_s(MemesFromFBD, \"M9LTxx8QeUxrNi0vW3JWZ05A5+I=\");\n\n_c = MemesFromFBD;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemesFromFBD\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/MemesFromFBD.jsx"],"names":["React","useEffect","useState","db","auth","storage","ref","uploadBytesResumable","getDownloadURL","doc","collection","getDocs","MemesFromFBD","allUploadedMemes","SetAllUploadedMemes","user","currentUser","memeCollectionRef","uid","getAllUploadedMemes","uploadedMemes","docs","map","data","id","console","log","caption"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,EAAT,EAAaC,IAAb,EAAmBC,OAAnB,QAAkC,gBAAlC;AACA,SAASC,GAAT,EAAcC,oBAAd,EAAoCC,cAApC,QAA0D,kBAA1D;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,OAA1B,QAAyC,oBAAzC;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,EAAD,CAAxD,CADqC,CAEvC;;AAGE,QAAMa,IAAI,GAAGX,IAAI,CAACY,WAAlB;AACA,QAAMC,iBAAiB,GAAGP,UAAU,CAACP,EAAD,EAAK,OAAL,EAAcY,IAAI,CAACG,GAAnB,EAAwB,OAAxB,CAApC;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,mBAAmB,GAAG,YAAY;AACtC,UAAMC,aAAa,GAAG,MAAMT,OAAO,CAACM,iBAAD,CAAnC;AACAH,IAAAA,mBAAmB,CAAC,CAClBM,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAwBb,GAAD,KAAU,EAAE,GAAGA,GAAG,CAACc,IAAJ,EAAL;AAAiBC,MAAAA,EAAE,EAAEf,GAAG,CAACe;AAAzB,KAAV,CAAvB,CADkB,CAAD,CAAnB;AAGD,GALD;;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,gBAAgB,CAACc,OAA7B,EAlBqC,CAoBvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;;AACA;AACD;;GAhDuBf,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { db, auth, storage } from \"../../firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, collection, getDocs } from \"firebase/firestore\";\n\nexport default function MemesFromFBD() {\n  const [allUploadedMemes, SetAllUploadedMemes] = useState([]);\n//   const [username, setUsername] = useState(\"\");\n\n\n  const user = auth.currentUser;\n  const memeCollectionRef = collection(db, \"users\", user.uid, \"memes\");\n\n  useEffect(() => {\n    getAllUploadedMemes();\n  }, []);\n\n  const getAllUploadedMemes = async () => {\n    const uploadedMemes = await getDocs(memeCollectionRef);\n    SetAllUploadedMemes([\n      uploadedMemes.docs.map((doc) => ({ ...doc.data(), id: doc.id }))\n    ]);\n  };\n  console.log(allUploadedMemes.caption);\n\n//   const uploadedMemeToDisplay = allUploadedMemes.map((meme) => {\n//     return (\n//       <div className=\"meme-container\">\n//         <h4 style={{ float: \"left\" }}>{}</h4>\n//         <br />\n//         <small\n//           style={{\n//             fontStyle: \"italic\",\n//             fontWeight: \"300\",\n//             fontSize: \"15px\",\n//             float: \"left\",\n//           }}\n//         >\n//           {}\n//         </small>\n//         <br /> <br />\n//         {/* <img src=\"\" alt=\"do i care\" className=\"meme-image\" /> */}\n//         <br /> <br />\n//         <button>View Comments</button>\n//         <small style={{ fontSize: \"10px\" }}></small>\n//       </div>\n//     );\n//   });\n\n  // const deleteMeme = (id) => {\n  //     const memeDoc = doc(db, \"users\", user.uid, \"memes\", id)\n  // }\n  return ;\n}\n"]},"metadata":{},"sourceType":"module"}