{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/Upload.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./Upload.scss\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { UploadMemeContext } from \"../../context/UploadMemeContext\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db, auth, storage } from \"../../firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Upload(_ref) {\n  _s();\n\n  let {\n    preview,\n    setPreview,\n    showPreview,\n    removePreview\n  } = _ref;\n  const [uploadMeme, setUploadMeme] = useContext(UploadMemeContext);\n  const [memes, setMemes] = useState({\n    caption: \"\",\n    uploadedMeme: \"\"\n  });\n  const [profile, setProfile] = useContext(ProfileContext);\n  const [setupShow, setSetupShow] = useState(true);\n  const [imageLoad, setImageLoad] = useState(null);\n  const history = useHistory();\n\n  const handleCaptionInput = e => {\n    setUploadMeme({ ...uploadMeme,\n      ...memes,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleUpload = async e => {\n    e.preventDefault();\n\n    try {\n      const user = auth.currentUser;\n      const q = query(collection(db, \"users\"));\n      const querySnapshot = await getDocs(q);\n      const queryData = querySnapshot.docs.map(meme => ({ ...meme.data(),\n        id: meme.id\n      }));\n      console.log(queryData); // await setDoc(doc(db, \"users\", user.uid), {\n      //   ...uploadMeme,\n      //   caption: \"hehehe\",\n      // });\n    } catch (error) {\n      console.log(error);\n    }\n\n    history.push(\"/homeview\");\n    setSetupShow(false);\n    setPreview();\n  };\n\n  useEffect(() => {\n    const uploadFile = () => {\n      const name = new Date().getTime() + preview.name;\n      console.log(name);\n      const storageRef = ref(storage, preview.name);\n      const uploadTask = uploadBytesResumable(storageRef, preview);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log(\"Upload is \" + progress + \"% done\");\n        setImageLoad(progress);\n\n        switch (snapshot.state) {\n          case \"paused\":\n            console.log(\"Upload is paused\");\n            break;\n\n          case \"running\":\n            console.log(\"Upload is running\");\n            break;\n\n          default:\n            break;\n        }\n      }, error => {\n        console.log(error);\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          console.log(\"File available at\", downloadURL);\n          setProfile({ ...uploadMeme,\n            uploadedMeme: downloadURL\n          });\n        });\n      });\n    };\n\n    preview && uploadFile();\n  }, [preview]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-show\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-top\",\n          children: [\"Alright, Lets Upload a Meme\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), \"\\uD83E\\uDD2D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 18\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), preview ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(preview),\n            className: \"img\",\n            alt: \"profile-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-image\",\n            onClick: removePreview,\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Upload Progress: \", imageLoad, \" done!!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-ip\",\n          className: \"label\",\n          children: \"Choose Your Meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"meme\",\n          type: \"file\",\n          id: \"file-ip\",\n          accept: \"image/*\",\n          onChange: e => {\n            showPreview(e);\n            handleCaptionInput(e);\n          },\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 18\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          forhtml: \"fullName\",\n          children: \"Say Something About Your Meme: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: {\n            height: \"80px\",\n            width: \"auto\"\n          },\n          name: \"caption\",\n          onChange: handleCaptionInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-profile\",\n          onClick: handleUpload,\n          disabled: imageLoad !== null && imageLoad < 100,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Upload, \"q/rSW5+S46Us9oY+LTB8WvEbg0I=\", false, function () {\n  return [useHistory];\n});\n\n_c = Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AppContents/Upload.jsx"],"names":["useContext","useState","useEffect","UploadMemeContext","ProfileContext","useHistory","doc","setDoc","serverTimestamp","db","auth","storage","ref","uploadBytesResumable","getDownloadURL","collection","query","where","getDocs","Upload","preview","setPreview","showPreview","removePreview","uploadMeme","setUploadMeme","memes","setMemes","caption","uploadedMeme","profile","setProfile","setupShow","setSetupShow","imageLoad","setImageLoad","history","handleCaptionInput","e","target","name","value","handleUpload","preventDefault","user","currentUser","q","querySnapshot","queryData","docs","map","meme","data","id","console","log","error","push","uploadFile","Date","getTime","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","state","then","downloadURL","URL","createObjectURL","height","width"],"mappings":"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","sourcesContent":["import \"./Upload.scss\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { UploadMemeContext } from \"../../context/UploadMemeContext\";\nimport { ProfileContext } from \"../../context/ProfileContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db, auth, storage } from \"../../firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\n\nexport default function Upload({\n  preview,\n  setPreview,\n  showPreview,\n  removePreview,\n}) {\n  const [uploadMeme, setUploadMeme] = useContext(UploadMemeContext);\n  const [memes, setMemes] = useState({\n    caption: \"\",\n    uploadedMeme: \"\",\n  });\n  const [profile, setProfile] = useContext(ProfileContext);\n  const [setupShow, setSetupShow] = useState(true);\n  const [imageLoad, setImageLoad] = useState(null);\n  const history = useHistory();\n\n  const handleCaptionInput = (e) => {\n    setUploadMeme({ ...uploadMeme, ...memes, [e.target.name]: e.target.value });\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    try {\n      const user = auth.currentUser;\n      const q = query(collection(db, \"users\"));\n      const querySnapshot = await getDocs(q);\n      const queryData = querySnapshot.docs.map((meme) => ({\n        ...meme.data(),\n        id: meme.id\n      }));\n      console.log(queryData);\n      // await setDoc(doc(db, \"users\", user.uid), {\n      //   ...uploadMeme,\n      //   caption: \"hehehe\",\n      // });\n    } catch (error) {\n      console.log(error);\n    }\n    history.push(\"/homeview\");\n    setSetupShow(false);\n    setPreview();\n  };\n\n  useEffect(() => {\n    const uploadFile = () => {\n      const name = new Date().getTime() + preview.name;\n      console.log(name);\n      const storageRef = ref(storage, preview.name);\n      const uploadTask = uploadBytesResumable(storageRef, preview);\n\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log(\"Upload is \" + progress + \"% done\");\n          setImageLoad(progress);\n          switch (snapshot.state) {\n            case \"paused\":\n              console.log(\"Upload is paused\");\n              break;\n            case \"running\":\n              console.log(\"Upload is running\");\n              break;\n            default:\n              break;\n          }\n        },\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n            console.log(\"File available at\", downloadURL);\n            setProfile({ ...uploadMeme, uploadedMeme: downloadURL });\n          });\n        }\n      );\n    };\n    preview && uploadFile();\n  }, [preview]);\n  return (\n    <div className=\"container\">\n      <div className=\"upload-show\">\n        <form method=\"post\" className=\"form\">\n          <label className=\"label-top\">\n            Alright, Lets Upload a Meme\n            <br />\n            <br />\n            🤭\n          </label>\n          <br /> <br />\n          <br /> <br /> <br />\n          <br />\n          {preview ? (\n            <div className=\"image\">\n              <img\n                src={URL.createObjectURL(preview)}\n                className=\"img\"\n                alt=\"profile-pic\"\n              />\n              <br />\n              <button className=\"remove-image\" onClick={removePreview}>\n                Remove\n              </button>\n            </div>\n          ) : null}\n          <br /> <br />\n          <small>Upload Progress: {imageLoad} done!!</small>\n          <br />\n          <label htmlFor=\"file-ip\" className=\"label\">\n            Choose Your Meme\n          </label>\n          <input\n            name=\"meme\"\n            type=\"file\"\n            id=\"file-ip\"\n            accept=\"image/*\"\n            onChange={(e) => {\n              showPreview(e);\n              handleCaptionInput(e);\n            }}\n            hidden\n          ></input>\n          <br /> <br /> <br />\n          <label forhtml=\"fullName\">Say Something About Your Meme: </label>\n          <br /> <br />\n          <input\n            type=\"text\"\n            style={{ height: \"80px\", width: \"auto\" }}\n            name=\"caption\"\n            onChange={handleCaptionInput}\n          ></input>\n          <br /> <br />\n          <button\n            className=\"save-profile\"\n            onClick={handleUpload}\n            disabled={imageLoad !== null && imageLoad < 100}\n          >\n            Upload\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}