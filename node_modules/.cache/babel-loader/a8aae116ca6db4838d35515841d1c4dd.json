{"ast":null,"code":"var _jsxFileName = \"/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LoadingSpin from \"./LoadingSpin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n\n  let [signUpData, setSignUpData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n    username: \"\"\n  });\n  const [emailIsValid, setEmailIsValid] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [authData, setAuthData] = useState([]);\n  const [passwordTaken, setPasswordTaken] = useState(false);\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState(false);\n  const [passwordIsValidError, setPasswordIsValidError] = useState(\"\");\n  const [requireTextField, setRequireTextField] = useState(false);\n  const [requiredError, setRequiredError] = useState(\"\");\n\n  function validateEmail(e) {\n    const email = e.target.value;\n    const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n    if (regex.test(email)) {\n      setEmailIsValid(true);\n      setError(\"Your email is valid\");\n    } else {\n      setEmailIsValid(false);\n      setError(\"Your email is not valid.\");\n    }\n  }\n\n  function tooglePassword() {\n    setShowPassword(!showPassword);\n  }\n\n  function toogleConfirmPass() {\n    setShowConfirmPass(!showConfirmPass);\n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:4000/memebook\").then(res => res.json()).then(data => {\n      console.log(data);\n      setAuthData([...data]);\n    });\n  }, []);\n\n  function passwordCheck(authData, e) {\n    const password = e.target.value;\n    authData.map(d => {\n      if (password === d.password) {\n        setPasswordTaken(true);\n        setPasswordError(\"This Password is already taken!\");\n      } else if (password.length < 8) {\n        setPasswordTaken(false);\n        setPasswordError(\"\");\n      }\n    });\n  }\n\n  function validatePassword(e) {\n    const passWord = e.target.value;\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/;\n\n    if (passwordRegex.test(passWord)) {\n      setPasswordIsValid(true);\n      setPasswordIsValidError(\"Password is Valid!\");\n    } else {\n      setPasswordIsValid(false);\n      setPasswordIsValidError(\"Password must be 8-30 characters long and must have at least one Number, Uppercase, Lowercase and a Special character!\");\n    }\n  }\n\n  function requiredField(e) {\n    if (e.target.value.length === 0) {\n      setRequireTextField(true);\n      setRequiredError(\"*required\");\n    } else {\n      setRequireTextField(false);\n      setRequiredError(\"\");\n    }\n  }\n\n  function handleInput(e) {\n    setSignUpData({ ...signUpData,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  const [loadingSpin, setLoadingSpin] = useState(false);\n\n  function handleSignUpClick() {\n    fetch(\"http://localhost:4000/memebook\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        firstname: signUpData.firstname,\n        lastname: signUpData.lastname,\n        email: signUpData.email,\n        password: signUpData.password,\n        username: signUpData.username\n      })\n    });\n    setLoadingSpin(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loadingSpin ? /*#__PURE__*/_jsxDEV(LoadingSpin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-up-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            fontSize: \"35px\",\n            fontWeight: \"800\",\n            fontFamily: \"Copperplate, Copperplate Gothic Light,fantasy\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"first-name\",\n            children: \"First Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => {\n              handleInput(e);\n              requiredField(e);\n            },\n            name: \"firstname\",\n            className: requireTextField ? \"required-text\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: requiredError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"last-name\",\n            children: \"Last Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lastname\",\n            className: requireTextField ? \"required-text\" : \"\",\n            onChange: handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: requiredError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            onChange: e => {\n              handleInput(e);\n              validateEmail(e);\n              requiredField(e);\n            },\n            className: requireTextField ? \"required-text\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: requiredError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? \"text\" : \"password\",\n            name: \"password\",\n            onChange: e => {\n              handleInput(e);\n              passwordCheck(authData, e);\n              validatePassword(e);\n            },\n            className: passwordIsValid ? \"\" : \"required-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: requiredError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: tooglePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [showPassword ? \" Hide \" : \" Show \", \" Password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: passwordError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: passwordIsValidError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirm-password\",\n            children: \"Confirm Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showConfirmPass ? \"text\" : \"password\",\n            name: \"password\",\n            onChange: e => {\n              handleInput(e);\n              requiredField(e);\n            },\n            className: requireTextField ? \"required-text\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: requiredError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: toogleConfirmPass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [showConfirmPass ? \" Hide \" : \" Show \", \" Password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Set UserName: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            onChange: e => {\n              handleInput(e);\n              requiredField(e);\n            },\n            className: requireTextField ? \"required-text\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: requiredError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"By clicking the \\\"SignUp\\\" button below, you agree to all terms and conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"landing-signup\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"signup-button\",\n            onClick: () => {\n              handleSignUpClick();\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"+eBnOxTdha7sAfnhou1MIehFKhI=\");\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/ajayghimire/Development/code/React Projects/reactfinal-project/src/components/AuthForm/SignUp.jsx"],"names":["React","useEffect","useState","Link","LoadingSpin","SignUp","signUpData","setSignUpData","firstname","lastname","email","password","username","emailIsValid","setEmailIsValid","error","setError","showPassword","setShowPassword","showConfirmPass","setShowConfirmPass","authData","setAuthData","passwordTaken","setPasswordTaken","passwordError","setPasswordError","passwordIsValid","setPasswordIsValid","passwordIsValidError","setPasswordIsValidError","requireTextField","setRequireTextField","requiredError","setRequiredError","validateEmail","e","target","value","regex","test","tooglePassword","toogleConfirmPass","fetch","then","res","json","data","console","log","passwordCheck","map","d","length","validatePassword","passWord","passwordRegex","requiredField","handleInput","name","loadingSpin","setLoadingSpin","handleSignUpClick","method","headers","body","JSON","stringify","textAlign","fontSize","fontWeight","fontFamily"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LoadingSpin from \"./LoadingSpin\";\n\nexport default function SignUp() {\n  let [signUpData, setSignUpData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n    username: \"\",\n  });\n  const [emailIsValid, setEmailIsValid] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [authData, setAuthData] = useState([]);\n  const [passwordTaken, setPasswordTaken] = useState(false);\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState(false);\n  const [passwordIsValidError, setPasswordIsValidError] = useState(\"\");\n  const [requireTextField, setRequireTextField] = useState(false);\n  const [requiredError, setRequiredError] = useState(\"\");\n\n  function validateEmail(e) {\n    const email = e.target.value;\n    const regex =\n      /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    if (regex.test(email)) {\n      setEmailIsValid(true);\n      setError(\"Your email is valid\");\n    } else {\n      setEmailIsValid(false);\n      setError(\"Your email is not valid.\");\n    }\n  }\n\n  function tooglePassword() {\n    setShowPassword(!showPassword);\n  }\n  function toogleConfirmPass() {\n    setShowConfirmPass(!showConfirmPass);\n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:4000/memebook\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setAuthData([...data]);\n      });\n  }, []);\n\n  function passwordCheck(authData, e) {\n    const password = e.target.value;\n    authData.map((d) => {\n      if (password === d.password) {\n        setPasswordTaken(true);\n        setPasswordError(\"This Password is already taken!\");\n      } else if (password.length < 8) {\n        setPasswordTaken(false);\n        setPasswordError(\"\");\n      }\n    });\n  }\n\n  function validatePassword(e) {\n    const passWord = e.target.value;\n    const passwordRegex =\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/;\n    if (passwordRegex.test(passWord)) {\n      setPasswordIsValid(true);\n      setPasswordIsValidError(\"Password is Valid!\");\n    } else {\n      setPasswordIsValid(false);\n      setPasswordIsValidError(\n        \"Password must be 8-30 characters long and must have at least one Number, Uppercase, Lowercase and a Special character!\"\n      );\n    }\n  }\n\n  function requiredField(e) {\n    if (e.target.value.length === 0) {\n      setRequireTextField(true);\n      setRequiredError(\"*required\");\n    } else {\n      setRequireTextField(false);\n      setRequiredError(\"\");\n    }\n  }\n\n  function handleInput(e) {\n    setSignUpData({ ...signUpData, [e.target.name]: e.target.value });\n  }\n\n  const [loadingSpin, setLoadingSpin] = useState(false);\n\n  function handleSignUpClick() {\n    fetch(\"http://localhost:4000/memebook\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        firstname: signUpData.firstname,\n        lastname: signUpData.lastname,\n        email: signUpData.email,\n        password: signUpData.password,\n        username: signUpData.username,\n      }),\n    });\n\n    setLoadingSpin(true);\n  }\n\n  return (\n    <div>\n      {loadingSpin ? (\n        <LoadingSpin />\n      ) : (\n        <div className=\"sign-up-form\">\n          <form>\n            <div\n              style={{\n                textAlign: \"center\",\n                fontSize: \"35px\",\n                fontWeight: \"800\",\n                fontFamily: \"Copperplate, Copperplate Gothic Light,fantasy\",\n              }}\n            >\n              <label>Sign Up</label>\n            </div>\n            <div>\n              <br />\n              <label htmlFor=\"first-name\">First Name: </label>\n              <input\n                type=\"text\"\n                onChange={(e) => {\n                  handleInput(e);\n                  requiredField(e);\n                }}\n                name=\"firstname\"\n                className={requireTextField ? \"required-text\" : \"\"}\n              />\n              <br />\n              <small>\n                <i>{requiredError}</i>\n              </small>\n            </div>\n            <div>\n              <br />\n              <label htmlFor=\"last-name\">Last Name: </label>\n              <input\n                type=\"text\"\n                name=\"lastname\"\n                className={requireTextField ? \"required-text\" : \"\"}\n                onChange={handleInput}\n              />\n              <br />\n              <small>\n                <i>{requiredError}</i>\n              </small>\n            </div>\n            <div>\n              <br />\n              <label htmlFor=\"email\">Email: </label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                onChange={(e) => {\n                  handleInput(e);\n                  validateEmail(e);\n                  requiredField(e);\n                }}\n                className={requireTextField ? \"required-text\" : \"\"}\n              />\n              <br />\n              <small>\n                <i>{requiredError}</i>\n              </small>\n              <br />\n              <small>\n                <i>{error}</i>\n              </small>\n            </div>\n            <div>\n              <br />\n              <label htmlFor=\"password\">Password: </label>\n              <input\n                type={showPassword ? \"text\" : \"password\"}\n                name=\"password\"\n                onChange={(e) => {\n                  handleInput(e);\n                  passwordCheck(authData, e);\n                  validatePassword(e);\n                }}\n                className={passwordIsValid ? \"\" : \"required-text\"}\n              />\n              <br />\n              <small>\n                <i>{requiredError}</i>\n              </small>\n              <br />\n              <input type=\"checkbox\" onClick={tooglePassword} />\n              <small>{showPassword ? \" Hide \" : \" Show \"} Password</small>\n              <br />\n              <small>\n                <i>{passwordError}</i>\n              </small>\n              <br />\n              <br />\n              <small>\n                <i>{passwordIsValidError}</i>\n              </small>\n            </div>\n            <div>\n              <br />\n              <label htmlFor=\"confirm-password\">Confirm Password: </label>\n              <input\n                type={showConfirmPass ? \"text\" : \"password\"}\n                name=\"password\"\n                onChange={(e) => {\n                  handleInput(e);\n                  requiredField(e);\n                }}\n                className={requireTextField ? \"required-text\" : \"\"}\n              />\n              <br />\n              <small>\n                <i>{requiredError}</i>\n              </small>\n              <br />\n              <input type=\"checkbox\" onClick={toogleConfirmPass} />\n              <small>{showConfirmPass ? \" Hide \" : \" Show \"} Password</small>\n            </div>\n            <div>\n              <br />\n              <label htmlFor=\"username\">Set UserName: </label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                onChange={(e) => {\n                  handleInput(e);\n                  requiredField(e);\n                }}\n                className={requireTextField ? \"required-text\" : \"\"}\n              />\n              <br />\n              <small>\n                <i>{requiredError}</i>\n              </small>\n            </div>\n            <br /> <br />\n            <small>\n              <i>\n                By clicking the \"SignUp\" button below, you agree to all terms\n                and conditions\n              </i>\n            </small>\n            <br /> <br />\n            <div className=\"landing-signup\">\n              <Link\n                to=\"/login\"\n                className=\"signup-button\"\n                onClick={() => {\n                  handleSignUpClick();\n                }}\n              >\n                Sign Up\n              </Link>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}